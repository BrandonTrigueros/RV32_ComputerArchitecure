<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="3.9.0" version="1.0">
  This file is intended to be loaded by Logisim-evolution v3.9.0(https://github.com/logisim-evolution/).

  <lib desc="#Wiring" name="0">
    <tool name="Pin">
      <a name="appearance" val="classic"/>
    </tool>
    <tool name="Tunnel">
      <a name="labelfont" val="SansSerif bold 10"/>
    </tool>
    <tool name="Constant">
      <a name="facing" val="west"/>
      <a name="value" val="0x0"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2"/>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4"/>
  <lib desc="#I/O" name="5"/>
  <lib desc="#TTL" name="6"/>
  <lib desc="#TCL" name="7"/>
  <lib desc="#Base" name="8"/>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#Input/Output-Extra" name="10"/>
  <lib desc="#Soc" name="11"/>
  <main name="RegisterFile"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Poke Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Wiring Tool"/>
    <tool lib="8" name="Text Tool"/>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
    </tool>
    <sep/>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
    <tool lib="1" name="XOR Gate"/>
    <tool lib="1" name="NAND Gate"/>
    <tool lib="1" name="NOR Gate"/>
    <sep/>
    <tool lib="4" name="D Flip-Flop"/>
    <tool lib="4" name="Register"/>
  </toolbar>
  <circuit name="main">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="main"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(390,460)" name="Clock"/>
    <comp lib="0" loc="(890,1110)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="none"/>
      <a name="bit11" val="none"/>
      <a name="bit12" val="none"/>
      <a name="bit13" val="none"/>
      <a name="bit14" val="none"/>
      <a name="bit2" val="0"/>
      <a name="bit3" val="none"/>
      <a name="bit4" val="none"/>
      <a name="bit5" val="none"/>
      <a name="bit6" val="none"/>
      <a name="bit7" val="none"/>
      <a name="bit8" val="none"/>
      <a name="bit9" val="none"/>
      <a name="fanout" val="1"/>
      <a name="incoming" val="15"/>
    </comp>
    <comp lib="0" loc="(890,700)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="none"/>
      <a name="bit11" val="none"/>
      <a name="bit12" val="none"/>
      <a name="bit13" val="none"/>
      <a name="bit14" val="none"/>
      <a name="bit2" val="0"/>
      <a name="bit3" val="none"/>
      <a name="bit4" val="none"/>
      <a name="bit5" val="none"/>
      <a name="bit6" val="none"/>
      <a name="bit7" val="none"/>
      <a name="bit8" val="none"/>
      <a name="bit9" val="none"/>
      <a name="fanout" val="1"/>
      <a name="incoming" val="15"/>
    </comp>
    <comp loc="(1260,1040)" name="CPU_Core">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="CacheController1"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(1260,630)" name="CPU_Core">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="CacheController0"/>
      <a name="labelvisible" val="true"/>
    </comp>
    <comp loc="(1430,740)" name="TransactionsBetweenCPU">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1640,540)" name="msi_protocol">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(1650,970)" name="FIFO">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(2030,680)" name="sdram">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(870,1110)" name="Core">
      <a name="label" val="Core1"/>
    </comp>
    <comp loc="(870,700)" name="Core">
      <a name="label" val="Core0"/>
    </comp>
    <wire from="(1000,1160)" to="(1000,1170)"/>
    <wire from="(1000,1160)" to="(1040,1160)"/>
    <wire from="(1000,750)" to="(1000,760)"/>
    <wire from="(1000,750)" to="(1040,750)"/>
    <wire from="(1260,1100)" to="(1280,1100)"/>
    <wire from="(1260,690)" to="(1290,690)"/>
    <wire from="(1350,460)" to="(1350,540)"/>
    <wire from="(1350,460)" to="(1730,460)"/>
    <wire from="(1350,540)" to="(1350,740)"/>
    <wire from="(1350,540)" to="(1420,540)"/>
    <wire from="(1350,740)" to="(1350,970)"/>
    <wire from="(1350,740)" to="(1430,740)"/>
    <wire from="(1350,970)" to="(1350,1370)"/>
    <wire from="(1350,970)" to="(1430,970)"/>
    <wire from="(1730,460)" to="(1730,680)"/>
    <wire from="(1730,460)" to="(2120,460)"/>
    <wire from="(1730,680)" to="(1730,1380)"/>
    <wire from="(1730,680)" to="(1810,680)"/>
    <wire from="(390,460)" to="(540,460)"/>
    <wire from="(540,1150)" to="(540,1380)"/>
    <wire from="(540,1150)" to="(650,1150)"/>
    <wire from="(540,460)" to="(540,740)"/>
    <wire from="(540,460)" to="(970,460)"/>
    <wire from="(540,740)" to="(540,1150)"/>
    <wire from="(540,740)" to="(650,740)"/>
    <wire from="(870,1110)" to="(890,1110)"/>
    <wire from="(870,1130)" to="(950,1130)"/>
    <wire from="(870,1170)" to="(1000,1170)"/>
    <wire from="(870,1190)" to="(990,1190)"/>
    <wire from="(870,700)" to="(890,700)"/>
    <wire from="(870,720)" to="(950,720)"/>
    <wire from="(870,760)" to="(1000,760)"/>
    <wire from="(870,780)" to="(990,780)"/>
    <wire from="(910,1100)" to="(1040,1100)"/>
    <wire from="(910,690)" to="(1040,690)"/>
    <wire from="(950,1120)" to="(1040,1120)"/>
    <wire from="(950,1120)" to="(950,1130)"/>
    <wire from="(950,710)" to="(1040,710)"/>
    <wire from="(950,710)" to="(950,720)"/>
    <wire from="(970,1040)" to="(1040,1040)"/>
    <wire from="(970,1040)" to="(970,1370)"/>
    <wire from="(970,460)" to="(1350,460)"/>
    <wire from="(970,460)" to="(970,630)"/>
    <wire from="(970,630)" to="(1040,630)"/>
    <wire from="(970,630)" to="(970,1040)"/>
    <wire from="(990,1140)" to="(1040,1140)"/>
    <wire from="(990,1140)" to="(990,1190)"/>
    <wire from="(990,730)" to="(1040,730)"/>
    <wire from="(990,730)" to="(990,780)"/>
  </circuit>
  <circuit name="ProgramCounter">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="ProgramCounter"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(170,170)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="CLK"/>
    </comp>
    <comp lib="0" loc="(170,90)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="inPC"/>
      <a name="radix" val="16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(210,170)" name="Tunnel">
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(240,90)" name="Tunnel">
      <a name="label" val="inPC_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(380,110)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="inPC_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(380,150)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(400,130)" name="Constant"/>
    <comp lib="0" loc="(490,200)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="outPC_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(560,130)" name="Constant">
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(660,70)" name="Tunnel">
      <a name="label" val="outPCPlus4_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(870,110)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="outPCPlus4_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(870,170)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="outPC_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(910,110)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="outPCPlus4"/>
      <a name="output" val="true"/>
      <a name="radix" val="16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(910,170)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="outPC"/>
      <a name="output" val="true"/>
      <a name="radix" val="16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="3" loc="(620,120)" name="Adder">
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(400,80)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="width" val="32"/>
    </comp>
    <wire from="(170,170)" to="(210,170)"/>
    <wire from="(170,90)" to="(240,90)"/>
    <wire from="(380,110)" to="(400,110)"/>
    <wire from="(380,150)" to="(400,150)"/>
    <wire from="(460,110)" to="(490,110)"/>
    <wire from="(490,110)" to="(490,200)"/>
    <wire from="(490,110)" to="(580,110)"/>
    <wire from="(560,130)" to="(580,130)"/>
    <wire from="(620,120)" to="(640,120)"/>
    <wire from="(640,70)" to="(640,120)"/>
    <wire from="(640,70)" to="(660,70)"/>
    <wire from="(870,110)" to="(910,110)"/>
    <wire from="(870,170)" to="(910,170)"/>
  </circuit>
  <circuit name="RegisterFile">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="RegisterFile"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(1110,1040)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x21we_t"/>
    </comp>
    <comp lib="0" loc="(1110,1170)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x25we_t"/>
    </comp>
    <comp lib="0" loc="(1110,1300)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x29we_t"/>
    </comp>
    <comp lib="0" loc="(1110,390)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x1we_t"/>
    </comp>
    <comp lib="0" loc="(1110,520)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x5we_t"/>
    </comp>
    <comp lib="0" loc="(1110,650)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x9we_t"/>
    </comp>
    <comp lib="0" loc="(1110,780)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x13we_t"/>
    </comp>
    <comp lib="0" loc="(1110,910)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x17we_t"/>
    </comp>
    <comp lib="0" loc="(1160,1020)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1160,1150)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1160,1280)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1160,370)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1160,500)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1160,630)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1160,760)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1160,890)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1170,1060)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1170,1190)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1170,1320)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1170,410)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1170,540)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1170,670)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1170,800)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1170,930)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1250,1020)" name="Tunnel">
      <a name="label" val="x21q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1250,1150)" name="Tunnel">
      <a name="label" val="x25q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1250,1280)" name="Tunnel">
      <a name="label" val="x29q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1250,370)" name="Tunnel">
      <a name="label" val="x1q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1250,500)" name="Tunnel">
      <a name="label" val="x5q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1250,630)" name="Tunnel">
      <a name="label" val="x9q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1250,760)" name="Tunnel">
      <a name="label" val="x13q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1250,890)" name="Tunnel">
      <a name="label" val="x17q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1430,1040)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x22we_t"/>
    </comp>
    <comp lib="0" loc="(1430,1170)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x26we_t"/>
    </comp>
    <comp lib="0" loc="(1430,1300)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x30we_t"/>
    </comp>
    <comp lib="0" loc="(1430,390)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x2we_t"/>
    </comp>
    <comp lib="0" loc="(1430,520)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x6we_t"/>
    </comp>
    <comp lib="0" loc="(1430,650)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x10we_t"/>
    </comp>
    <comp lib="0" loc="(1430,780)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x14we_t"/>
    </comp>
    <comp lib="0" loc="(1430,910)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x18we_t"/>
    </comp>
    <comp lib="0" loc="(1480,1020)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1480,1150)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1480,1280)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1480,370)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1480,500)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1480,630)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1480,760)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1480,890)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1490,1060)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1490,1190)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1490,1320)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1490,410)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1490,540)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1490,670)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1490,800)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1490,930)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1570,1020)" name="Tunnel">
      <a name="label" val="x22q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1570,1150)" name="Tunnel">
      <a name="label" val="x26q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1570,1280)" name="Tunnel">
      <a name="label" val="x30q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1570,370)" name="Tunnel">
      <a name="label" val="x2q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1570,500)" name="Tunnel">
      <a name="label" val="x6q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1570,630)" name="Tunnel">
      <a name="label" val="x10q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1570,760)" name="Tunnel">
      <a name="label" val="x14q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1570,890)" name="Tunnel">
      <a name="label" val="x18q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1750,1040)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x23we_t"/>
    </comp>
    <comp lib="0" loc="(1750,1170)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x27we_t"/>
    </comp>
    <comp lib="0" loc="(1750,1300)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x31we_t"/>
    </comp>
    <comp lib="0" loc="(1750,390)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x3we_t"/>
    </comp>
    <comp lib="0" loc="(1750,520)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x7we_t"/>
    </comp>
    <comp lib="0" loc="(1750,650)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x11we_t"/>
    </comp>
    <comp lib="0" loc="(1750,780)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x15we_t"/>
    </comp>
    <comp lib="0" loc="(1750,910)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x19we_t"/>
    </comp>
    <comp lib="0" loc="(1800,1020)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1800,1150)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1800,1280)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1800,370)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1800,500)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1800,630)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1800,760)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1800,890)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1810,1060)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1810,1190)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1810,1320)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1810,410)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1810,540)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1810,670)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1810,800)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1810,930)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(1890,1020)" name="Tunnel">
      <a name="label" val="x23q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1890,1150)" name="Tunnel">
      <a name="label" val="x27q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1890,1280)" name="Tunnel">
      <a name="label" val="x31q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1890,370)" name="Tunnel">
      <a name="label" val="x3q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1890,500)" name="Tunnel">
      <a name="label" val="x7q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1890,630)" name="Tunnel">
      <a name="label" val="x11q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1890,760)" name="Tunnel">
      <a name="label" val="x15q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1890,890)" name="Tunnel">
      <a name="label" val="x19q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,1030)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x6q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,1070)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x8q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,1110)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x10q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,1150)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x12q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,1190)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x14q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,1230)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x16q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,1270)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x18q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,1310)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x20q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,1350)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x22q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,1390)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x24q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,1430)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x26q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,1470)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x28q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,1510)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x30q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,910)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x0q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,950)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x2q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2100,990)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x4q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,250)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x0q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,290)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x2q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,330)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x4q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,370)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x6q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,410)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x8q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,450)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x10q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,490)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x12q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,530)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x14q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,570)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x16q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,610)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x18q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,650)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x20q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,690)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x22q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,730)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x24q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,770)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x26q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,810)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x28q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2110,850)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x30q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,1010)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x5q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,1050)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x7q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,1090)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x9q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,1130)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x11q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,1170)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x13q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,1210)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x15q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,1250)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x17q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,1290)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x19q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,1330)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x21q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,1370)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x23q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,1410)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x25q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,1450)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x27q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,1490)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x29q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,1530)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x31q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,930)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x1q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2170,970)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x3q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,130)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rs1_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,170)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rs2_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,270)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x1q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,310)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x3q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,350)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x5q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,390)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x7q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,430)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x9q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,470)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x11q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,510)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x13q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,550)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x15q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,590)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x17q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,630)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x19q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,670)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x21q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,710)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x23q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,750)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x25q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,790)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x27q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,830)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x29q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2180,870)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x31q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(220,1030)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="we_t"/>
    </comp>
    <comp lib="0" loc="(2230,130)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="rs1"/>
      <a name="output" val="true"/>
      <a name="radix" val="16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2230,170)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="rs2"/>
      <a name="output" val="true"/>
      <a name="radix" val="16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2370,1420)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="rsi2_t"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(2380,760)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="rsi1_t"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(2420,1230)" name="Tunnel">
      <a name="label" val="rs2_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2430,570)" name="Tunnel">
      <a name="label" val="rs1_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(270,1230)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="rdi_t"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(470,1030)" name="Tunnel">
      <a name="label" val="x16we_t"/>
    </comp>
    <comp lib="0" loc="(470,1070)" name="Tunnel">
      <a name="label" val="x18we_t"/>
    </comp>
    <comp lib="0" loc="(470,1110)" name="Tunnel">
      <a name="label" val="x20we_t"/>
    </comp>
    <comp lib="0" loc="(470,1150)" name="Tunnel">
      <a name="label" val="x22we_t"/>
    </comp>
    <comp lib="0" loc="(470,1190)" name="Tunnel">
      <a name="label" val="x24we_t"/>
    </comp>
    <comp lib="0" loc="(470,1230)" name="Tunnel">
      <a name="label" val="x26we_t"/>
    </comp>
    <comp lib="0" loc="(470,1270)" name="Tunnel">
      <a name="label" val="x28we_t"/>
    </comp>
    <comp lib="0" loc="(470,1310)" name="Tunnel">
      <a name="label" val="x30we_t"/>
    </comp>
    <comp lib="0" loc="(470,550)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="we"/>
    </comp>
    <comp lib="0" loc="(470,620)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="CLK"/>
    </comp>
    <comp lib="0" loc="(470,710)" name="Tunnel">
      <a name="label" val="x0we_t"/>
    </comp>
    <comp lib="0" loc="(470,750)" name="Tunnel">
      <a name="label" val="x2we_t"/>
    </comp>
    <comp lib="0" loc="(470,790)" name="Tunnel">
      <a name="label" val="x4we_t"/>
    </comp>
    <comp lib="0" loc="(470,830)" name="Tunnel">
      <a name="label" val="x6we_t"/>
    </comp>
    <comp lib="0" loc="(470,870)" name="Tunnel">
      <a name="label" val="x8we_t"/>
    </comp>
    <comp lib="0" loc="(470,910)" name="Tunnel">
      <a name="label" val="x10we_t"/>
    </comp>
    <comp lib="0" loc="(470,950)" name="Tunnel">
      <a name="label" val="x12we_t"/>
    </comp>
    <comp lib="0" loc="(470,990)" name="Tunnel">
      <a name="label" val="x14we_t"/>
    </comp>
    <comp lib="0" loc="(480,460)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="rd"/>
      <a name="radix" val="16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(490,270)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="rsi1"/>
      <a name="radix" val="10unsigned"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(490,310)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="rsi2"/>
      <a name="radix" val="10unsigned"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(490,390)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="rdi"/>
      <a name="radix" val="10unsigned"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(550,1010)" name="Tunnel">
      <a name="label" val="x15we_t"/>
    </comp>
    <comp lib="0" loc="(550,1050)" name="Tunnel">
      <a name="label" val="x17we_t"/>
    </comp>
    <comp lib="0" loc="(550,1090)" name="Tunnel">
      <a name="label" val="x19we_t"/>
    </comp>
    <comp lib="0" loc="(550,1130)" name="Tunnel">
      <a name="label" val="x21we_t"/>
    </comp>
    <comp lib="0" loc="(550,1170)" name="Tunnel">
      <a name="label" val="x23we_t"/>
    </comp>
    <comp lib="0" loc="(550,1210)" name="Tunnel">
      <a name="label" val="x25we_t"/>
    </comp>
    <comp lib="0" loc="(550,1250)" name="Tunnel">
      <a name="label" val="x27we_t"/>
    </comp>
    <comp lib="0" loc="(550,1290)" name="Tunnel">
      <a name="label" val="x29we_t"/>
    </comp>
    <comp lib="0" loc="(550,1330)" name="Tunnel">
      <a name="label" val="x31we_t"/>
    </comp>
    <comp lib="0" loc="(550,270)" name="Tunnel">
      <a name="label" val="rsi1_t"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(550,310)" name="Tunnel">
      <a name="label" val="rsi2_t"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(550,390)" name="Tunnel">
      <a name="label" val="rdi_t"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(550,460)" name="Tunnel">
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(550,550)" name="Tunnel">
      <a name="label" val="we_t"/>
    </comp>
    <comp lib="0" loc="(550,620)" name="Tunnel">
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(550,730)" name="Tunnel">
      <a name="label" val="x1we_t"/>
    </comp>
    <comp lib="0" loc="(550,770)" name="Tunnel">
      <a name="label" val="x3we_t"/>
    </comp>
    <comp lib="0" loc="(550,810)" name="Tunnel">
      <a name="label" val="x5we_t"/>
    </comp>
    <comp lib="0" loc="(550,850)" name="Tunnel">
      <a name="label" val="x7we_t"/>
    </comp>
    <comp lib="0" loc="(550,890)" name="Tunnel">
      <a name="label" val="x9we_t"/>
    </comp>
    <comp lib="0" loc="(550,930)" name="Tunnel">
      <a name="label" val="x11we_t"/>
    </comp>
    <comp lib="0" loc="(550,970)" name="Tunnel">
      <a name="label" val="x13we_t"/>
    </comp>
    <comp lib="0" loc="(790,1040)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x20we_t"/>
    </comp>
    <comp lib="0" loc="(790,1170)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x24we_t"/>
    </comp>
    <comp lib="0" loc="(790,1300)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x28we_t"/>
    </comp>
    <comp lib="0" loc="(790,390)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x0we_t"/>
    </comp>
    <comp lib="0" loc="(790,520)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x4we_t"/>
    </comp>
    <comp lib="0" loc="(790,650)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x8we_t"/>
    </comp>
    <comp lib="0" loc="(790,780)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x12we_t"/>
    </comp>
    <comp lib="0" loc="(790,910)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x16we_t"/>
    </comp>
    <comp lib="0" loc="(820,390)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="ERR"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(840,1020)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(840,1150)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(840,1280)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(840,500)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(840,630)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(840,760)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(840,890)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="rd_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(850,1060)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(850,1190)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(850,1320)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(850,540)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(850,670)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(850,800)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(850,930)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="CLK_t"/>
    </comp>
    <comp lib="0" loc="(910,380)" name="Ground">
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(930,1020)" name="Tunnel">
      <a name="label" val="x20q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(930,1150)" name="Tunnel">
      <a name="label" val="x24q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(930,1280)" name="Tunnel">
      <a name="label" val="x28q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(930,370)" name="Tunnel">
      <a name="label" val="x0q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(930,500)" name="Tunnel">
      <a name="label" val="x4q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(930,630)" name="Tunnel">
      <a name="label" val="x8q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(930,760)" name="Tunnel">
      <a name="label" val="x12q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(930,890)" name="Tunnel">
      <a name="label" val="x16q_t"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(2390,1230)" name="Multiplexer">
      <a name="select" val="5"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(2400,570)" name="Multiplexer">
      <a name="select" val="5"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(250,1030)" name="Demultiplexer">
      <a name="select" val="5"/>
    </comp>
    <comp lib="4" loc="(1170,1120)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x25"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1170,1250)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x29"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1170,340)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x1"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1170,470)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x5"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1170,600)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x9"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1170,730)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x13"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1170,860)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x17"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1170,990)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x21"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1490,1120)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x26"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1490,1250)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x30"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1490,340)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x2"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1490,470)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x6"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1490,600)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x10"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1490,730)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x14"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1490,860)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x18"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1490,990)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x22"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1810,1120)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x27"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1810,1250)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x31"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1810,340)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x3"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1810,470)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x7"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1810,600)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x11"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1810,730)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x15"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1810,860)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x19"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1810,990)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x23"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(850,1120)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x24"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(850,1250)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x28"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(850,470)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x4"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(850,600)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x8"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(850,730)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x12"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(850,860)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(850,990)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="x20"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="8" loc="(2250,95)" name="Text">
      <a name="text" val="Output Register Values"/>
    </comp>
    <comp lib="8" loc="(440,525)" name="Text">
      <a name="text" val="Write Enable"/>
    </comp>
    <comp lib="8" loc="(440,595)" name="Text">
      <a name="text" val="Clock"/>
    </comp>
    <comp lib="8" loc="(465,365)" name="Text">
      <a name="text" val="Register Destination Index"/>
    </comp>
    <comp lib="8" loc="(465,435)" name="Text">
      <a name="text" val="Register Destination Value"/>
    </comp>
    <comp lib="8" loc="(485,235)" name="Text">
      <a name="text" val="Register Source Index"/>
    </comp>
    <comp lib="8" loc="(755,365)" name="Text">
      <a name="text" val="si x0we enciende, es falta"/>
    </comp>
    <comp lib="8" loc="(875,325)" name="Text">
      <a name="text" val="x0 siempre es 0"/>
    </comp>
    <wire from="(1110,1040)" to="(1170,1040)"/>
    <wire from="(1110,1170)" to="(1170,1170)"/>
    <wire from="(1110,1300)" to="(1170,1300)"/>
    <wire from="(1110,390)" to="(1170,390)"/>
    <wire from="(1110,520)" to="(1170,520)"/>
    <wire from="(1110,650)" to="(1170,650)"/>
    <wire from="(1110,780)" to="(1170,780)"/>
    <wire from="(1110,910)" to="(1170,910)"/>
    <wire from="(1160,1020)" to="(1170,1020)"/>
    <wire from="(1160,1150)" to="(1170,1150)"/>
    <wire from="(1160,1280)" to="(1170,1280)"/>
    <wire from="(1160,370)" to="(1170,370)"/>
    <wire from="(1160,500)" to="(1170,500)"/>
    <wire from="(1160,630)" to="(1170,630)"/>
    <wire from="(1160,760)" to="(1170,760)"/>
    <wire from="(1160,890)" to="(1170,890)"/>
    <wire from="(1230,1020)" to="(1250,1020)"/>
    <wire from="(1230,1150)" to="(1250,1150)"/>
    <wire from="(1230,1280)" to="(1250,1280)"/>
    <wire from="(1230,370)" to="(1250,370)"/>
    <wire from="(1230,500)" to="(1250,500)"/>
    <wire from="(1230,630)" to="(1250,630)"/>
    <wire from="(1230,760)" to="(1250,760)"/>
    <wire from="(1230,890)" to="(1250,890)"/>
    <wire from="(1430,1040)" to="(1490,1040)"/>
    <wire from="(1430,1170)" to="(1490,1170)"/>
    <wire from="(1430,1300)" to="(1490,1300)"/>
    <wire from="(1430,390)" to="(1490,390)"/>
    <wire from="(1430,520)" to="(1490,520)"/>
    <wire from="(1430,650)" to="(1490,650)"/>
    <wire from="(1430,780)" to="(1490,780)"/>
    <wire from="(1430,910)" to="(1490,910)"/>
    <wire from="(1480,1020)" to="(1490,1020)"/>
    <wire from="(1480,1150)" to="(1490,1150)"/>
    <wire from="(1480,1280)" to="(1490,1280)"/>
    <wire from="(1480,370)" to="(1490,370)"/>
    <wire from="(1480,500)" to="(1490,500)"/>
    <wire from="(1480,630)" to="(1490,630)"/>
    <wire from="(1480,760)" to="(1490,760)"/>
    <wire from="(1480,890)" to="(1490,890)"/>
    <wire from="(1550,1020)" to="(1570,1020)"/>
    <wire from="(1550,1150)" to="(1570,1150)"/>
    <wire from="(1550,1280)" to="(1570,1280)"/>
    <wire from="(1550,370)" to="(1570,370)"/>
    <wire from="(1550,500)" to="(1570,500)"/>
    <wire from="(1550,630)" to="(1570,630)"/>
    <wire from="(1550,760)" to="(1570,760)"/>
    <wire from="(1550,890)" to="(1570,890)"/>
    <wire from="(1750,1040)" to="(1810,1040)"/>
    <wire from="(1750,1170)" to="(1810,1170)"/>
    <wire from="(1750,1300)" to="(1810,1300)"/>
    <wire from="(1750,390)" to="(1810,390)"/>
    <wire from="(1750,520)" to="(1810,520)"/>
    <wire from="(1750,650)" to="(1810,650)"/>
    <wire from="(1750,780)" to="(1810,780)"/>
    <wire from="(1750,910)" to="(1810,910)"/>
    <wire from="(1800,1020)" to="(1810,1020)"/>
    <wire from="(1800,1150)" to="(1810,1150)"/>
    <wire from="(1800,1280)" to="(1810,1280)"/>
    <wire from="(1800,370)" to="(1810,370)"/>
    <wire from="(1800,500)" to="(1810,500)"/>
    <wire from="(1800,630)" to="(1810,630)"/>
    <wire from="(1800,760)" to="(1810,760)"/>
    <wire from="(1800,890)" to="(1810,890)"/>
    <wire from="(1870,1020)" to="(1890,1020)"/>
    <wire from="(1870,1150)" to="(1890,1150)"/>
    <wire from="(1870,1280)" to="(1890,1280)"/>
    <wire from="(1870,370)" to="(1890,370)"/>
    <wire from="(1870,500)" to="(1890,500)"/>
    <wire from="(1870,630)" to="(1890,630)"/>
    <wire from="(1870,760)" to="(1890,760)"/>
    <wire from="(1870,890)" to="(1890,890)"/>
    <wire from="(2100,1030)" to="(2270,1030)"/>
    <wire from="(2100,1070)" to="(2250,1070)"/>
    <wire from="(2100,1110)" to="(2230,1110)"/>
    <wire from="(2100,1150)" to="(2210,1150)"/>
    <wire from="(2100,1190)" to="(2190,1190)"/>
    <wire from="(2100,1230)" to="(2350,1230)"/>
    <wire from="(2100,1270)" to="(2190,1270)"/>
    <wire from="(2100,1310)" to="(2210,1310)"/>
    <wire from="(2100,1350)" to="(2230,1350)"/>
    <wire from="(2100,1390)" to="(2250,1390)"/>
    <wire from="(2100,1430)" to="(2270,1430)"/>
    <wire from="(2100,1470)" to="(2290,1470)"/>
    <wire from="(2100,1510)" to="(2310,1510)"/>
    <wire from="(2100,910)" to="(2330,910)"/>
    <wire from="(2100,950)" to="(2310,950)"/>
    <wire from="(2100,990)" to="(2290,990)"/>
    <wire from="(2110,250)" to="(2340,250)"/>
    <wire from="(2110,290)" to="(2320,290)"/>
    <wire from="(2110,330)" to="(2300,330)"/>
    <wire from="(2110,370)" to="(2280,370)"/>
    <wire from="(2110,410)" to="(2260,410)"/>
    <wire from="(2110,450)" to="(2240,450)"/>
    <wire from="(2110,490)" to="(2220,490)"/>
    <wire from="(2110,530)" to="(2200,530)"/>
    <wire from="(2110,570)" to="(2360,570)"/>
    <wire from="(2110,610)" to="(2200,610)"/>
    <wire from="(2110,650)" to="(2220,650)"/>
    <wire from="(2110,690)" to="(2240,690)"/>
    <wire from="(2110,730)" to="(2260,730)"/>
    <wire from="(2110,770)" to="(2280,770)"/>
    <wire from="(2110,810)" to="(2300,810)"/>
    <wire from="(2110,850)" to="(2320,850)"/>
    <wire from="(2170,1010)" to="(2280,1010)"/>
    <wire from="(2170,1050)" to="(2260,1050)"/>
    <wire from="(2170,1090)" to="(2240,1090)"/>
    <wire from="(2170,1130)" to="(2220,1130)"/>
    <wire from="(2170,1170)" to="(2200,1170)"/>
    <wire from="(2170,1210)" to="(2180,1210)"/>
    <wire from="(2170,1250)" to="(2180,1250)"/>
    <wire from="(2170,1290)" to="(2200,1290)"/>
    <wire from="(2170,1330)" to="(2220,1330)"/>
    <wire from="(2170,1370)" to="(2240,1370)"/>
    <wire from="(2170,1410)" to="(2260,1410)"/>
    <wire from="(2170,1450)" to="(2280,1450)"/>
    <wire from="(2170,1490)" to="(2300,1490)"/>
    <wire from="(2170,1530)" to="(2320,1530)"/>
    <wire from="(2170,930)" to="(2320,930)"/>
    <wire from="(2170,970)" to="(2300,970)"/>
    <wire from="(2180,1210)" to="(2180,1220)"/>
    <wire from="(2180,1220)" to="(2350,1220)"/>
    <wire from="(2180,1240)" to="(2180,1250)"/>
    <wire from="(2180,1240)" to="(2350,1240)"/>
    <wire from="(2180,130)" to="(2230,130)"/>
    <wire from="(2180,170)" to="(2230,170)"/>
    <wire from="(2180,270)" to="(2330,270)"/>
    <wire from="(2180,310)" to="(2310,310)"/>
    <wire from="(2180,350)" to="(2290,350)"/>
    <wire from="(2180,390)" to="(2270,390)"/>
    <wire from="(2180,430)" to="(2250,430)"/>
    <wire from="(2180,470)" to="(2230,470)"/>
    <wire from="(2180,510)" to="(2210,510)"/>
    <wire from="(2180,550)" to="(2190,550)"/>
    <wire from="(2180,590)" to="(2190,590)"/>
    <wire from="(2180,630)" to="(2210,630)"/>
    <wire from="(2180,670)" to="(2230,670)"/>
    <wire from="(2180,710)" to="(2250,710)"/>
    <wire from="(2180,750)" to="(2270,750)"/>
    <wire from="(2180,790)" to="(2290,790)"/>
    <wire from="(2180,830)" to="(2310,830)"/>
    <wire from="(2180,870)" to="(2330,870)"/>
    <wire from="(2190,1190)" to="(2190,1210)"/>
    <wire from="(2190,1210)" to="(2350,1210)"/>
    <wire from="(2190,1250)" to="(2190,1270)"/>
    <wire from="(2190,1250)" to="(2350,1250)"/>
    <wire from="(2190,550)" to="(2190,560)"/>
    <wire from="(2190,560)" to="(2360,560)"/>
    <wire from="(2190,580)" to="(2190,590)"/>
    <wire from="(2190,580)" to="(2360,580)"/>
    <wire from="(220,1030)" to="(250,1030)"/>
    <wire from="(2200,1170)" to="(2200,1200)"/>
    <wire from="(2200,1200)" to="(2350,1200)"/>
    <wire from="(2200,1260)" to="(2200,1290)"/>
    <wire from="(2200,1260)" to="(2350,1260)"/>
    <wire from="(2200,530)" to="(2200,550)"/>
    <wire from="(2200,550)" to="(2360,550)"/>
    <wire from="(2200,590)" to="(2200,610)"/>
    <wire from="(2200,590)" to="(2360,590)"/>
    <wire from="(2210,1150)" to="(2210,1190)"/>
    <wire from="(2210,1190)" to="(2350,1190)"/>
    <wire from="(2210,1270)" to="(2210,1310)"/>
    <wire from="(2210,1270)" to="(2350,1270)"/>
    <wire from="(2210,510)" to="(2210,540)"/>
    <wire from="(2210,540)" to="(2360,540)"/>
    <wire from="(2210,600)" to="(2210,630)"/>
    <wire from="(2210,600)" to="(2360,600)"/>
    <wire from="(2220,1130)" to="(2220,1180)"/>
    <wire from="(2220,1180)" to="(2350,1180)"/>
    <wire from="(2220,1280)" to="(2220,1330)"/>
    <wire from="(2220,1280)" to="(2350,1280)"/>
    <wire from="(2220,490)" to="(2220,530)"/>
    <wire from="(2220,530)" to="(2360,530)"/>
    <wire from="(2220,610)" to="(2220,650)"/>
    <wire from="(2220,610)" to="(2360,610)"/>
    <wire from="(2230,1110)" to="(2230,1170)"/>
    <wire from="(2230,1170)" to="(2350,1170)"/>
    <wire from="(2230,1290)" to="(2230,1350)"/>
    <wire from="(2230,1290)" to="(2350,1290)"/>
    <wire from="(2230,470)" to="(2230,520)"/>
    <wire from="(2230,520)" to="(2360,520)"/>
    <wire from="(2230,620)" to="(2230,670)"/>
    <wire from="(2230,620)" to="(2360,620)"/>
    <wire from="(2240,1090)" to="(2240,1160)"/>
    <wire from="(2240,1160)" to="(2350,1160)"/>
    <wire from="(2240,1300)" to="(2240,1370)"/>
    <wire from="(2240,1300)" to="(2350,1300)"/>
    <wire from="(2240,450)" to="(2240,510)"/>
    <wire from="(2240,510)" to="(2360,510)"/>
    <wire from="(2240,630)" to="(2240,690)"/>
    <wire from="(2240,630)" to="(2360,630)"/>
    <wire from="(2250,1070)" to="(2250,1150)"/>
    <wire from="(2250,1150)" to="(2350,1150)"/>
    <wire from="(2250,1310)" to="(2250,1390)"/>
    <wire from="(2250,1310)" to="(2350,1310)"/>
    <wire from="(2250,430)" to="(2250,500)"/>
    <wire from="(2250,500)" to="(2360,500)"/>
    <wire from="(2250,640)" to="(2250,710)"/>
    <wire from="(2250,640)" to="(2360,640)"/>
    <wire from="(2260,1050)" to="(2260,1140)"/>
    <wire from="(2260,1140)" to="(2350,1140)"/>
    <wire from="(2260,1320)" to="(2260,1410)"/>
    <wire from="(2260,1320)" to="(2350,1320)"/>
    <wire from="(2260,410)" to="(2260,490)"/>
    <wire from="(2260,490)" to="(2360,490)"/>
    <wire from="(2260,650)" to="(2260,730)"/>
    <wire from="(2260,650)" to="(2360,650)"/>
    <wire from="(2270,1030)" to="(2270,1130)"/>
    <wire from="(2270,1130)" to="(2350,1130)"/>
    <wire from="(2270,1330)" to="(2270,1430)"/>
    <wire from="(2270,1330)" to="(2350,1330)"/>
    <wire from="(2270,390)" to="(2270,480)"/>
    <wire from="(2270,480)" to="(2360,480)"/>
    <wire from="(2270,660)" to="(2270,750)"/>
    <wire from="(2270,660)" to="(2360,660)"/>
    <wire from="(2280,1010)" to="(2280,1120)"/>
    <wire from="(2280,1120)" to="(2350,1120)"/>
    <wire from="(2280,1340)" to="(2280,1450)"/>
    <wire from="(2280,1340)" to="(2350,1340)"/>
    <wire from="(2280,370)" to="(2280,470)"/>
    <wire from="(2280,470)" to="(2360,470)"/>
    <wire from="(2280,670)" to="(2280,770)"/>
    <wire from="(2280,670)" to="(2360,670)"/>
    <wire from="(2290,1110)" to="(2350,1110)"/>
    <wire from="(2290,1350)" to="(2290,1470)"/>
    <wire from="(2290,1350)" to="(2350,1350)"/>
    <wire from="(2290,350)" to="(2290,460)"/>
    <wire from="(2290,460)" to="(2360,460)"/>
    <wire from="(2290,680)" to="(2290,790)"/>
    <wire from="(2290,680)" to="(2360,680)"/>
    <wire from="(2290,990)" to="(2290,1110)"/>
    <wire from="(2300,1100)" to="(2350,1100)"/>
    <wire from="(2300,1360)" to="(2300,1490)"/>
    <wire from="(2300,1360)" to="(2350,1360)"/>
    <wire from="(2300,330)" to="(2300,450)"/>
    <wire from="(2300,450)" to="(2360,450)"/>
    <wire from="(2300,690)" to="(2300,810)"/>
    <wire from="(2300,690)" to="(2360,690)"/>
    <wire from="(2300,970)" to="(2300,1100)"/>
    <wire from="(2310,1090)" to="(2350,1090)"/>
    <wire from="(2310,1370)" to="(2310,1510)"/>
    <wire from="(2310,1370)" to="(2350,1370)"/>
    <wire from="(2310,310)" to="(2310,440)"/>
    <wire from="(2310,440)" to="(2360,440)"/>
    <wire from="(2310,700)" to="(2310,830)"/>
    <wire from="(2310,700)" to="(2360,700)"/>
    <wire from="(2310,950)" to="(2310,1090)"/>
    <wire from="(2320,1080)" to="(2350,1080)"/>
    <wire from="(2320,1380)" to="(2320,1530)"/>
    <wire from="(2320,1380)" to="(2350,1380)"/>
    <wire from="(2320,290)" to="(2320,430)"/>
    <wire from="(2320,430)" to="(2360,430)"/>
    <wire from="(2320,710)" to="(2320,850)"/>
    <wire from="(2320,710)" to="(2360,710)"/>
    <wire from="(2320,930)" to="(2320,1080)"/>
    <wire from="(2330,1070)" to="(2350,1070)"/>
    <wire from="(2330,270)" to="(2330,420)"/>
    <wire from="(2330,420)" to="(2360,420)"/>
    <wire from="(2330,720)" to="(2330,870)"/>
    <wire from="(2330,720)" to="(2360,720)"/>
    <wire from="(2330,910)" to="(2330,1070)"/>
    <wire from="(2340,250)" to="(2340,410)"/>
    <wire from="(2340,410)" to="(2360,410)"/>
    <wire from="(2370,1390)" to="(2370,1420)"/>
    <wire from="(2380,730)" to="(2380,760)"/>
    <wire from="(2390,1230)" to="(2420,1230)"/>
    <wire from="(2400,570)" to="(2430,570)"/>
    <wire from="(270,1190)" to="(270,1230)"/>
    <wire from="(290,1000)" to="(440,1000)"/>
    <wire from="(290,1010)" to="(450,1010)"/>
    <wire from="(290,1020)" to="(460,1020)"/>
    <wire from="(290,1030)" to="(470,1030)"/>
    <wire from="(290,1040)" to="(460,1040)"/>
    <wire from="(290,1050)" to="(450,1050)"/>
    <wire from="(290,1060)" to="(440,1060)"/>
    <wire from="(290,1070)" to="(430,1070)"/>
    <wire from="(290,1080)" to="(420,1080)"/>
    <wire from="(290,1090)" to="(410,1090)"/>
    <wire from="(290,1100)" to="(400,1100)"/>
    <wire from="(290,1110)" to="(390,1110)"/>
    <wire from="(290,1120)" to="(380,1120)"/>
    <wire from="(290,1130)" to="(370,1130)"/>
    <wire from="(290,1140)" to="(360,1140)"/>
    <wire from="(290,1150)" to="(350,1150)"/>
    <wire from="(290,1160)" to="(340,1160)"/>
    <wire from="(290,1170)" to="(330,1170)"/>
    <wire from="(290,1180)" to="(320,1180)"/>
    <wire from="(290,870)" to="(310,870)"/>
    <wire from="(290,880)" to="(320,880)"/>
    <wire from="(290,890)" to="(330,890)"/>
    <wire from="(290,900)" to="(340,900)"/>
    <wire from="(290,910)" to="(350,910)"/>
    <wire from="(290,920)" to="(360,920)"/>
    <wire from="(290,930)" to="(370,930)"/>
    <wire from="(290,940)" to="(380,940)"/>
    <wire from="(290,950)" to="(390,950)"/>
    <wire from="(290,960)" to="(400,960)"/>
    <wire from="(290,970)" to="(410,970)"/>
    <wire from="(290,980)" to="(420,980)"/>
    <wire from="(290,990)" to="(430,990)"/>
    <wire from="(310,710)" to="(310,870)"/>
    <wire from="(310,710)" to="(470,710)"/>
    <wire from="(320,1180)" to="(320,1330)"/>
    <wire from="(320,1330)" to="(550,1330)"/>
    <wire from="(320,730)" to="(320,880)"/>
    <wire from="(320,730)" to="(550,730)"/>
    <wire from="(330,1170)" to="(330,1310)"/>
    <wire from="(330,1310)" to="(470,1310)"/>
    <wire from="(330,750)" to="(330,890)"/>
    <wire from="(330,750)" to="(470,750)"/>
    <wire from="(340,1160)" to="(340,1290)"/>
    <wire from="(340,1290)" to="(550,1290)"/>
    <wire from="(340,770)" to="(340,900)"/>
    <wire from="(340,770)" to="(550,770)"/>
    <wire from="(350,1150)" to="(350,1270)"/>
    <wire from="(350,1270)" to="(470,1270)"/>
    <wire from="(350,790)" to="(350,910)"/>
    <wire from="(350,790)" to="(470,790)"/>
    <wire from="(360,1140)" to="(360,1250)"/>
    <wire from="(360,1250)" to="(550,1250)"/>
    <wire from="(360,810)" to="(360,920)"/>
    <wire from="(360,810)" to="(550,810)"/>
    <wire from="(370,1130)" to="(370,1230)"/>
    <wire from="(370,1230)" to="(470,1230)"/>
    <wire from="(370,830)" to="(370,930)"/>
    <wire from="(370,830)" to="(470,830)"/>
    <wire from="(380,1120)" to="(380,1210)"/>
    <wire from="(380,1210)" to="(550,1210)"/>
    <wire from="(380,850)" to="(380,940)"/>
    <wire from="(380,850)" to="(550,850)"/>
    <wire from="(390,1110)" to="(390,1190)"/>
    <wire from="(390,1190)" to="(470,1190)"/>
    <wire from="(390,870)" to="(390,950)"/>
    <wire from="(390,870)" to="(470,870)"/>
    <wire from="(400,1100)" to="(400,1170)"/>
    <wire from="(400,1170)" to="(550,1170)"/>
    <wire from="(400,890)" to="(400,960)"/>
    <wire from="(400,890)" to="(550,890)"/>
    <wire from="(410,1090)" to="(410,1150)"/>
    <wire from="(410,1150)" to="(470,1150)"/>
    <wire from="(410,910)" to="(410,970)"/>
    <wire from="(410,910)" to="(470,910)"/>
    <wire from="(420,1080)" to="(420,1130)"/>
    <wire from="(420,1130)" to="(550,1130)"/>
    <wire from="(420,930)" to="(420,980)"/>
    <wire from="(420,930)" to="(550,930)"/>
    <wire from="(430,1070)" to="(430,1110)"/>
    <wire from="(430,1110)" to="(470,1110)"/>
    <wire from="(430,950)" to="(430,990)"/>
    <wire from="(430,950)" to="(470,950)"/>
    <wire from="(440,1060)" to="(440,1090)"/>
    <wire from="(440,1090)" to="(550,1090)"/>
    <wire from="(440,970)" to="(440,1000)"/>
    <wire from="(440,970)" to="(550,970)"/>
    <wire from="(450,1050)" to="(450,1070)"/>
    <wire from="(450,1070)" to="(470,1070)"/>
    <wire from="(450,990)" to="(450,1010)"/>
    <wire from="(450,990)" to="(470,990)"/>
    <wire from="(460,1010)" to="(460,1020)"/>
    <wire from="(460,1010)" to="(550,1010)"/>
    <wire from="(460,1040)" to="(460,1050)"/>
    <wire from="(460,1050)" to="(550,1050)"/>
    <wire from="(470,550)" to="(550,550)"/>
    <wire from="(470,620)" to="(550,620)"/>
    <wire from="(480,460)" to="(550,460)"/>
    <wire from="(490,270)" to="(550,270)"/>
    <wire from="(490,310)" to="(550,310)"/>
    <wire from="(490,390)" to="(550,390)"/>
    <wire from="(790,1040)" to="(850,1040)"/>
    <wire from="(790,1170)" to="(850,1170)"/>
    <wire from="(790,1300)" to="(850,1300)"/>
    <wire from="(790,390)" to="(820,390)"/>
    <wire from="(790,520)" to="(850,520)"/>
    <wire from="(790,650)" to="(850,650)"/>
    <wire from="(790,780)" to="(850,780)"/>
    <wire from="(790,910)" to="(850,910)"/>
    <wire from="(840,1020)" to="(850,1020)"/>
    <wire from="(840,1150)" to="(850,1150)"/>
    <wire from="(840,1280)" to="(850,1280)"/>
    <wire from="(840,500)" to="(850,500)"/>
    <wire from="(840,630)" to="(850,630)"/>
    <wire from="(840,760)" to="(850,760)"/>
    <wire from="(840,890)" to="(850,890)"/>
    <wire from="(910,1020)" to="(930,1020)"/>
    <wire from="(910,1150)" to="(930,1150)"/>
    <wire from="(910,1280)" to="(930,1280)"/>
    <wire from="(910,370)" to="(910,380)"/>
    <wire from="(910,370)" to="(930,370)"/>
    <wire from="(910,500)" to="(930,500)"/>
    <wire from="(910,630)" to="(930,630)"/>
    <wire from="(910,760)" to="(930,760)"/>
    <wire from="(910,890)" to="(930,890)"/>
  </circuit>
  <circuit name="InmExtractor">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="InmExtractor"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(240,240)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="label" val="instr"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(290,240)" name="Splitter">
      <a name="appear" val="right"/>
      <a name="bit1" val="0"/>
      <a name="bit10" val="2"/>
      <a name="bit11" val="2"/>
      <a name="bit12" val="3"/>
      <a name="bit13" val="3"/>
      <a name="bit14" val="3"/>
      <a name="bit15" val="4"/>
      <a name="bit16" val="4"/>
      <a name="bit17" val="4"/>
      <a name="bit18" val="4"/>
      <a name="bit19" val="4"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="5"/>
      <a name="bit21" val="6"/>
      <a name="bit22" val="6"/>
      <a name="bit23" val="6"/>
      <a name="bit24" val="6"/>
      <a name="bit25" val="7"/>
      <a name="bit26" val="7"/>
      <a name="bit27" val="7"/>
      <a name="bit28" val="7"/>
      <a name="bit29" val="7"/>
      <a name="bit3" val="0"/>
      <a name="bit30" val="7"/>
      <a name="bit31" val="8"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="1"/>
      <a name="bit8" val="2"/>
      <a name="bit9" val="2"/>
      <a name="fanout" val="9"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(310,250)" name="NoConnect">
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(380,350)" name="Bit Extender">
      <a name="in_width" val="1"/>
      <a name="out_width" val="21"/>
    </comp>
    <comp lib="0" loc="(590,660)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="0"/>
      <a name="bit11" val="0"/>
      <a name="bit12" val="0"/>
      <a name="bit13" val="0"/>
      <a name="bit14" val="0"/>
      <a name="bit15" val="0"/>
      <a name="bit16" val="0"/>
      <a name="bit17" val="0"/>
      <a name="bit18" val="0"/>
      <a name="bit19" val="0"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="1"/>
      <a name="bit3" val="0"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="0"/>
      <a name="bit9" val="0"/>
      <a name="incoming" val="21"/>
    </comp>
    <comp lib="0" loc="(590,780)" name="Splitter">
      <a name="bit10" val="1"/>
      <a name="bit11" val="1"/>
      <a name="bit12" val="1"/>
      <a name="bit13" val="1"/>
      <a name="bit14" val="1"/>
      <a name="bit15" val="1"/>
      <a name="bit16" val="1"/>
      <a name="bit17" val="1"/>
      <a name="bit18" val="1"/>
      <a name="bit19" val="1"/>
      <a name="bit2" val="1"/>
      <a name="bit20" val="1"/>
      <a name="bit3" val="1"/>
      <a name="bit4" val="1"/>
      <a name="bit5" val="1"/>
      <a name="bit6" val="1"/>
      <a name="bit7" val="1"/>
      <a name="bit8" val="1"/>
      <a name="bit9" val="1"/>
      <a name="incoming" val="21"/>
    </comp>
    <comp lib="0" loc="(590,910)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="0"/>
      <a name="bit11" val="0"/>
      <a name="bit12" val="1"/>
      <a name="bit13" val="1"/>
      <a name="bit14" val="1"/>
      <a name="bit15" val="1"/>
      <a name="bit16" val="1"/>
      <a name="bit17" val="1"/>
      <a name="bit18" val="1"/>
      <a name="bit19" val="1"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="1"/>
      <a name="bit3" val="0"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="0"/>
      <a name="bit9" val="0"/>
      <a name="incoming" val="21"/>
    </comp>
    <comp lib="0" loc="(610,650)" name="NoConnect"/>
    <comp lib="0" loc="(610,770)" name="NoConnect">
      <a name="width" val="20"/>
    </comp>
    <comp lib="0" loc="(610,900)" name="NoConnect">
      <a name="width" val="9"/>
    </comp>
    <comp lib="0" loc="(620,750)" name="Splitter">
      <a name="appear" val="right"/>
      <a name="bit10" val="2"/>
      <a name="bit2" val="1"/>
      <a name="bit3" val="1"/>
      <a name="bit4" val="1"/>
      <a name="bit5" val="2"/>
      <a name="bit6" val="2"/>
      <a name="bit7" val="2"/>
      <a name="bit8" val="2"/>
      <a name="bit9" val="2"/>
      <a name="facing" val="west"/>
      <a name="fanout" val="3"/>
      <a name="incoming" val="11"/>
    </comp>
    <comp lib="0" loc="(630,710)" name="Splitter">
      <a name="appear" val="right"/>
      <a name="bit1" val="0"/>
      <a name="bit2" val="0"/>
      <a name="bit3" val="1"/>
      <a name="bit4" val="1"/>
      <a name="bit5" val="1"/>
      <a name="bit6" val="1"/>
      <a name="bit7" val="1"/>
      <a name="facing" val="west"/>
      <a name="incoming" val="8"/>
    </comp>
    <comp lib="0" loc="(660,840)" name="Constant">
      <a name="value" val="0x0"/>
    </comp>
    <comp lib="0" loc="(670,600)" name="Constant">
      <a name="value" val="0x0"/>
    </comp>
    <comp lib="0" loc="(670,730)" name="Constant">
      <a name="value" val="0x0"/>
      <a name="width" val="12"/>
    </comp>
    <comp lib="0" loc="(700,410)" name="Splitter">
      <a name="appear" val="right"/>
      <a name="bit10" val="2"/>
      <a name="bit11" val="3"/>
      <a name="bit12" val="3"/>
      <a name="bit13" val="3"/>
      <a name="bit14" val="3"/>
      <a name="bit15" val="3"/>
      <a name="bit16" val="3"/>
      <a name="bit17" val="3"/>
      <a name="bit18" val="3"/>
      <a name="bit19" val="3"/>
      <a name="bit2" val="1"/>
      <a name="bit20" val="3"/>
      <a name="bit21" val="3"/>
      <a name="bit22" val="3"/>
      <a name="bit23" val="3"/>
      <a name="bit24" val="3"/>
      <a name="bit25" val="3"/>
      <a name="bit26" val="3"/>
      <a name="bit27" val="3"/>
      <a name="bit28" val="3"/>
      <a name="bit29" val="3"/>
      <a name="bit3" val="1"/>
      <a name="bit30" val="3"/>
      <a name="bit31" val="3"/>
      <a name="bit4" val="1"/>
      <a name="bit5" val="2"/>
      <a name="bit6" val="2"/>
      <a name="bit7" val="2"/>
      <a name="bit8" val="2"/>
      <a name="bit9" val="2"/>
      <a name="facing" val="west"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(700,530)" name="Splitter">
      <a name="appear" val="right"/>
      <a name="bit10" val="2"/>
      <a name="bit11" val="3"/>
      <a name="bit12" val="3"/>
      <a name="bit13" val="3"/>
      <a name="bit14" val="3"/>
      <a name="bit15" val="3"/>
      <a name="bit16" val="3"/>
      <a name="bit17" val="3"/>
      <a name="bit18" val="3"/>
      <a name="bit19" val="3"/>
      <a name="bit2" val="1"/>
      <a name="bit20" val="3"/>
      <a name="bit21" val="3"/>
      <a name="bit22" val="3"/>
      <a name="bit23" val="3"/>
      <a name="bit24" val="3"/>
      <a name="bit25" val="3"/>
      <a name="bit26" val="3"/>
      <a name="bit27" val="3"/>
      <a name="bit28" val="3"/>
      <a name="bit29" val="3"/>
      <a name="bit3" val="1"/>
      <a name="bit30" val="3"/>
      <a name="bit31" val="3"/>
      <a name="bit4" val="1"/>
      <a name="bit5" val="2"/>
      <a name="bit6" val="2"/>
      <a name="bit7" val="2"/>
      <a name="bit8" val="2"/>
      <a name="bit9" val="2"/>
      <a name="facing" val="west"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(700,650)" name="Splitter">
      <a name="appear" val="right"/>
      <a name="bit10" val="2"/>
      <a name="bit11" val="3"/>
      <a name="bit12" val="4"/>
      <a name="bit13" val="4"/>
      <a name="bit14" val="4"/>
      <a name="bit15" val="4"/>
      <a name="bit16" val="4"/>
      <a name="bit17" val="4"/>
      <a name="bit18" val="4"/>
      <a name="bit19" val="4"/>
      <a name="bit2" val="1"/>
      <a name="bit20" val="4"/>
      <a name="bit21" val="4"/>
      <a name="bit22" val="4"/>
      <a name="bit23" val="4"/>
      <a name="bit24" val="4"/>
      <a name="bit25" val="4"/>
      <a name="bit26" val="4"/>
      <a name="bit27" val="4"/>
      <a name="bit28" val="4"/>
      <a name="bit29" val="4"/>
      <a name="bit3" val="1"/>
      <a name="bit30" val="4"/>
      <a name="bit31" val="4"/>
      <a name="bit4" val="1"/>
      <a name="bit5" val="2"/>
      <a name="bit6" val="2"/>
      <a name="bit7" val="2"/>
      <a name="bit8" val="2"/>
      <a name="bit9" val="2"/>
      <a name="facing" val="west"/>
      <a name="fanout" val="5"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(700,770)" name="Splitter">
      <a name="appear" val="right"/>
      <a name="bit1" val="0"/>
      <a name="bit10" val="0"/>
      <a name="bit11" val="0"/>
      <a name="bit12" val="1"/>
      <a name="bit13" val="1"/>
      <a name="bit14" val="1"/>
      <a name="bit15" val="1"/>
      <a name="bit16" val="1"/>
      <a name="bit17" val="1"/>
      <a name="bit18" val="1"/>
      <a name="bit19" val="1"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="2"/>
      <a name="bit21" val="2"/>
      <a name="bit22" val="2"/>
      <a name="bit23" val="2"/>
      <a name="bit24" val="2"/>
      <a name="bit25" val="2"/>
      <a name="bit26" val="2"/>
      <a name="bit27" val="2"/>
      <a name="bit28" val="2"/>
      <a name="bit29" val="2"/>
      <a name="bit3" val="0"/>
      <a name="bit30" val="2"/>
      <a name="bit31" val="3"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="0"/>
      <a name="bit9" val="0"/>
      <a name="facing" val="west"/>
      <a name="fanout" val="4"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(700,900)" name="Splitter">
      <a name="appear" val="right"/>
      <a name="bit10" val="2"/>
      <a name="bit11" val="3"/>
      <a name="bit12" val="4"/>
      <a name="bit13" val="4"/>
      <a name="bit14" val="4"/>
      <a name="bit15" val="4"/>
      <a name="bit16" val="4"/>
      <a name="bit17" val="4"/>
      <a name="bit18" val="4"/>
      <a name="bit19" val="4"/>
      <a name="bit2" val="1"/>
      <a name="bit20" val="5"/>
      <a name="bit21" val="5"/>
      <a name="bit22" val="5"/>
      <a name="bit23" val="5"/>
      <a name="bit24" val="5"/>
      <a name="bit25" val="5"/>
      <a name="bit26" val="5"/>
      <a name="bit27" val="5"/>
      <a name="bit28" val="5"/>
      <a name="bit29" val="5"/>
      <a name="bit3" val="1"/>
      <a name="bit30" val="5"/>
      <a name="bit31" val="5"/>
      <a name="bit4" val="1"/>
      <a name="bit5" val="2"/>
      <a name="bit6" val="2"/>
      <a name="bit7" val="2"/>
      <a name="bit8" val="2"/>
      <a name="bit9" val="2"/>
      <a name="facing" val="west"/>
      <a name="fanout" val="6"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(850,410)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="I_imm"/>
      <a name="output" val="true"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(850,530)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="S_imm"/>
      <a name="output" val="true"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(850,650)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="B_imm"/>
      <a name="output" val="true"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(850,770)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="U_imm"/>
      <a name="output" val="true"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(850,900)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="J_imm"/>
      <a name="output" val="true"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="8" loc="(695,355)" name="Text">
      <a name="text" val="I-imm"/>
    </comp>
    <comp lib="8" loc="(695,475)" name="Text">
      <a name="text" val="S-imm"/>
    </comp>
    <comp lib="8" loc="(695,825)" name="Text">
      <a name="text" val="J-imm"/>
    </comp>
    <comp lib="8" loc="(700,585)" name="Text">
      <a name="text" val="B-imm"/>
    </comp>
    <comp lib="8" loc="(700,710)" name="Text">
      <a name="text" val="U-imm"/>
    </comp>
    <wire from="(240,240)" to="(290,240)"/>
    <wire from="(310,260)" to="(440,260)"/>
    <wire from="(310,270)" to="(460,270)"/>
    <wire from="(310,280)" to="(480,280)"/>
    <wire from="(310,290)" to="(500,290)"/>
    <wire from="(310,300)" to="(520,300)"/>
    <wire from="(310,310)" to="(540,310)"/>
    <wire from="(310,320)" to="(560,320)"/>
    <wire from="(310,330)" to="(330,330)"/>
    <wire from="(330,330)" to="(330,350)"/>
    <wire from="(330,350)" to="(340,350)"/>
    <wire from="(380,350)" to="(580,350)"/>
    <wire from="(440,260)" to="(440,490)"/>
    <wire from="(440,490)" to="(440,630)"/>
    <wire from="(440,490)" to="(680,490)"/>
    <wire from="(440,630)" to="(680,630)"/>
    <wire from="(460,270)" to="(460,500)"/>
    <wire from="(460,500)" to="(460,610)"/>
    <wire from="(460,500)" to="(680,500)"/>
    <wire from="(460,610)" to="(680,610)"/>
    <wire from="(480,280)" to="(480,690)"/>
    <wire from="(480,690)" to="(610,690)"/>
    <wire from="(500,290)" to="(500,700)"/>
    <wire from="(500,700)" to="(610,700)"/>
    <wire from="(520,300)" to="(520,370)"/>
    <wire from="(520,370)" to="(520,720)"/>
    <wire from="(520,370)" to="(680,370)"/>
    <wire from="(520,720)" to="(520,870)"/>
    <wire from="(520,720)" to="(600,720)"/>
    <wire from="(520,870)" to="(680,870)"/>
    <wire from="(540,310)" to="(540,380)"/>
    <wire from="(540,380)" to="(540,730)"/>
    <wire from="(540,380)" to="(680,380)"/>
    <wire from="(540,730)" to="(540,850)"/>
    <wire from="(540,730)" to="(600,730)"/>
    <wire from="(540,850)" to="(680,850)"/>
    <wire from="(560,320)" to="(560,390)"/>
    <wire from="(560,390)" to="(560,510)"/>
    <wire from="(560,390)" to="(680,390)"/>
    <wire from="(560,510)" to="(560,620)"/>
    <wire from="(560,510)" to="(680,510)"/>
    <wire from="(560,620)" to="(560,740)"/>
    <wire from="(560,620)" to="(680,620)"/>
    <wire from="(560,740)" to="(560,860)"/>
    <wire from="(560,740)" to="(600,740)"/>
    <wire from="(560,860)" to="(680,860)"/>
    <wire from="(580,350)" to="(580,400)"/>
    <wire from="(580,400)" to="(580,520)"/>
    <wire from="(580,400)" to="(680,400)"/>
    <wire from="(580,520)" to="(580,660)"/>
    <wire from="(580,520)" to="(680,520)"/>
    <wire from="(580,660)" to="(580,780)"/>
    <wire from="(580,660)" to="(590,660)"/>
    <wire from="(580,780)" to="(580,910)"/>
    <wire from="(580,780)" to="(590,780)"/>
    <wire from="(580,910)" to="(590,910)"/>
    <wire from="(610,640)" to="(680,640)"/>
    <wire from="(610,760)" to="(680,760)"/>
    <wire from="(610,890)" to="(680,890)"/>
    <wire from="(620,750)" to="(680,750)"/>
    <wire from="(630,710)" to="(630,740)"/>
    <wire from="(630,740)" to="(630,880)"/>
    <wire from="(630,740)" to="(680,740)"/>
    <wire from="(630,880)" to="(680,880)"/>
    <wire from="(660,840)" to="(680,840)"/>
    <wire from="(670,600)" to="(680,600)"/>
    <wire from="(670,730)" to="(680,730)"/>
    <wire from="(700,410)" to="(850,410)"/>
    <wire from="(700,530)" to="(850,530)"/>
    <wire from="(700,650)" to="(850,650)"/>
    <wire from="(700,770)" to="(850,770)"/>
    <wire from="(700,900)" to="(850,900)"/>
  </circuit>
  <circuit name="IDecode">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="IDecode"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(1030,100)" name="Splitter">
      <a name="appear" val="right"/>
      <a name="bit2" val="1"/>
      <a name="bit3" val="1"/>
      <a name="bit4" val="1"/>
      <a name="facing" val="west"/>
      <a name="incoming" val="5"/>
    </comp>
    <comp lib="0" loc="(1030,240)" name="Splitter">
      <a name="appear" val="right"/>
      <a name="bit2" val="1"/>
      <a name="bit3" val="1"/>
      <a name="bit4" val="1"/>
      <a name="facing" val="west"/>
      <a name="incoming" val="5"/>
    </comp>
    <comp lib="0" loc="(1030,290)" name="Splitter">
      <a name="appear" val="right"/>
      <a name="bit1" val="0"/>
      <a name="bit2" val="0"/>
      <a name="bit3" val="0"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="1"/>
      <a name="facing" val="west"/>
      <a name="incoming" val="7"/>
    </comp>
    <comp lib="0" loc="(1060,100)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="rd"/>
      <a name="output" val="true"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(1060,1000)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="ebc"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(1060,140)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="funct3"/>
      <a name="output" val="true"/>
      <a name="width" val="3"/>
    </comp>
    <comp lib="0" loc="(1060,190)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="rs1"/>
      <a name="output" val="true"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(1060,240)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="rs2"/>
      <a name="output" val="true"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(1060,290)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="funct7"/>
      <a name="output" val="true"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(1060,360)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="imm"/>
      <a name="output" val="true"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(1060,550)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="ar_r"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(1060,600)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="ar_i"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(1060,650)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="ld"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(1060,70)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="OPcode"/>
      <a name="output" val="true"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(1060,700)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="st"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(1060,750)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="br"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(1060,800)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="jal"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(1060,850)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="jalr"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(1060,900)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="lui"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(1060,950)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="facing" val="west"/>
      <a name="label" val="auipc"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(280,60)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="label" val="instr"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(350,60)" name="Splitter">
      <a name="appear" val="right"/>
      <a name="bit1" val="0"/>
      <a name="bit10" val="2"/>
      <a name="bit11" val="2"/>
      <a name="bit12" val="3"/>
      <a name="bit13" val="3"/>
      <a name="bit14" val="3"/>
      <a name="bit15" val="4"/>
      <a name="bit16" val="4"/>
      <a name="bit17" val="4"/>
      <a name="bit18" val="4"/>
      <a name="bit19" val="4"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="5"/>
      <a name="bit21" val="6"/>
      <a name="bit22" val="6"/>
      <a name="bit23" val="6"/>
      <a name="bit24" val="6"/>
      <a name="bit25" val="7"/>
      <a name="bit26" val="7"/>
      <a name="bit27" val="7"/>
      <a name="bit28" val="7"/>
      <a name="bit29" val="7"/>
      <a name="bit3" val="0"/>
      <a name="bit30" val="7"/>
      <a name="bit31" val="8"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="1"/>
      <a name="bit8" val="2"/>
      <a name="bit9" val="2"/>
      <a name="fanout" val="9"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(420,1010)" name="Constant">
      <a name="value" val="0x73"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(420,560)" name="Constant">
      <a name="value" val="0x33"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(420,610)" name="Constant">
      <a name="value" val="0x13"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(420,660)" name="Constant">
      <a name="value" val="0x3"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(420,710)" name="Constant">
      <a name="value" val="0x23"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(420,760)" name="Constant">
      <a name="value" val="0x63"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(420,810)" name="Constant">
      <a name="value" val="0x6f"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(420,860)" name="Constant">
      <a name="value" val="0x67"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(420,910)" name="Constant">
      <a name="value" val="0x37"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="0" loc="(420,960)" name="Constant">
      <a name="value" val="0x17"/>
      <a name="width" val="7"/>
    </comp>
    <comp lib="1" loc="(840,400)" name="OR Gate">
      <a name="facing" val="north"/>
      <a name="size" val="30"/>
    </comp>
    <comp lib="2" loc="(720,220)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(790,260)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(860,310)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(930,360)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="3" loc="(480,1000)" name="Comparator">
      <a name="width" val="7"/>
    </comp>
    <comp lib="3" loc="(480,550)" name="Comparator">
      <a name="width" val="7"/>
    </comp>
    <comp lib="3" loc="(480,600)" name="Comparator">
      <a name="width" val="7"/>
    </comp>
    <comp lib="3" loc="(480,650)" name="Comparator">
      <a name="width" val="7"/>
    </comp>
    <comp lib="3" loc="(480,700)" name="Comparator">
      <a name="width" val="7"/>
    </comp>
    <comp lib="3" loc="(480,750)" name="Comparator">
      <a name="width" val="7"/>
    </comp>
    <comp lib="3" loc="(480,800)" name="Comparator">
      <a name="width" val="7"/>
    </comp>
    <comp lib="3" loc="(480,850)" name="Comparator">
      <a name="width" val="7"/>
    </comp>
    <comp lib="3" loc="(480,900)" name="Comparator">
      <a name="width" val="7"/>
    </comp>
    <comp lib="3" loc="(480,950)" name="Comparator">
      <a name="width" val="7"/>
    </comp>
    <comp loc="(620,210)" name="InmExtractor"/>
    <wire from="(1000,100)" to="(1000,140)"/>
    <wire from="(1000,140)" to="(1060,140)"/>
    <wire from="(1030,100)" to="(1060,100)"/>
    <wire from="(1030,240)" to="(1060,240)"/>
    <wire from="(1030,290)" to="(1060,290)"/>
    <wire from="(280,60)" to="(330,60)"/>
    <wire from="(330,210)" to="(400,210)"/>
    <wire from="(330,60)" to="(330,210)"/>
    <wire from="(330,60)" to="(350,60)"/>
    <wire from="(370,100)" to="(1000,100)"/>
    <wire from="(370,110)" to="(980,110)"/>
    <wire from="(370,120)" to="(960,120)"/>
    <wire from="(370,130)" to="(950,130)"/>
    <wire from="(370,140)" to="(930,140)"/>
    <wire from="(370,150)" to="(920,150)"/>
    <wire from="(370,70)" to="(390,70)"/>
    <wire from="(370,80)" to="(1010,80)"/>
    <wire from="(370,90)" to="(1010,90)"/>
    <wire from="(390,540)" to="(390,590)"/>
    <wire from="(390,540)" to="(440,540)"/>
    <wire from="(390,590)" to="(390,640)"/>
    <wire from="(390,590)" to="(440,590)"/>
    <wire from="(390,640)" to="(390,690)"/>
    <wire from="(390,640)" to="(440,640)"/>
    <wire from="(390,690)" to="(390,740)"/>
    <wire from="(390,690)" to="(440,690)"/>
    <wire from="(390,70)" to="(1060,70)"/>
    <wire from="(390,70)" to="(390,540)"/>
    <wire from="(390,740)" to="(390,790)"/>
    <wire from="(390,740)" to="(440,740)"/>
    <wire from="(390,790)" to="(390,840)"/>
    <wire from="(390,790)" to="(440,790)"/>
    <wire from="(390,840)" to="(390,890)"/>
    <wire from="(390,840)" to="(440,840)"/>
    <wire from="(390,890)" to="(390,940)"/>
    <wire from="(390,890)" to="(440,890)"/>
    <wire from="(390,940)" to="(390,990)"/>
    <wire from="(390,940)" to="(440,940)"/>
    <wire from="(390,990)" to="(440,990)"/>
    <wire from="(420,1010)" to="(440,1010)"/>
    <wire from="(420,560)" to="(440,560)"/>
    <wire from="(420,610)" to="(440,610)"/>
    <wire from="(420,660)" to="(440,660)"/>
    <wire from="(420,710)" to="(440,710)"/>
    <wire from="(420,760)" to="(440,760)"/>
    <wire from="(420,810)" to="(440,810)"/>
    <wire from="(420,860)" to="(440,860)"/>
    <wire from="(420,910)" to="(440,910)"/>
    <wire from="(420,960)" to="(440,960)"/>
    <wire from="(480,1000)" to="(1060,1000)"/>
    <wire from="(480,550)" to="(1060,550)"/>
    <wire from="(480,600)" to="(1060,600)"/>
    <wire from="(480,650)" to="(1060,650)"/>
    <wire from="(480,700)" to="(700,700)"/>
    <wire from="(480,750)" to="(770,750)"/>
    <wire from="(480,800)" to="(910,800)"/>
    <wire from="(480,850)" to="(1060,850)"/>
    <wire from="(480,900)" to="(850,900)"/>
    <wire from="(480,950)" to="(830,950)"/>
    <wire from="(620,210)" to="(690,210)"/>
    <wire from="(620,230)" to="(690,230)"/>
    <wire from="(620,250)" to="(640,250)"/>
    <wire from="(620,270)" to="(630,270)"/>
    <wire from="(620,290)" to="(620,370)"/>
    <wire from="(620,370)" to="(900,370)"/>
    <wire from="(630,270)" to="(630,320)"/>
    <wire from="(630,320)" to="(830,320)"/>
    <wire from="(640,250)" to="(640,270)"/>
    <wire from="(640,270)" to="(760,270)"/>
    <wire from="(700,240)" to="(700,700)"/>
    <wire from="(700,700)" to="(1060,700)"/>
    <wire from="(720,220)" to="(740,220)"/>
    <wire from="(740,220)" to="(740,250)"/>
    <wire from="(740,250)" to="(760,250)"/>
    <wire from="(770,280)" to="(770,750)"/>
    <wire from="(770,750)" to="(1060,750)"/>
    <wire from="(790,260)" to="(810,260)"/>
    <wire from="(810,260)" to="(810,300)"/>
    <wire from="(810,300)" to="(830,300)"/>
    <wire from="(830,430)" to="(830,950)"/>
    <wire from="(830,950)" to="(1060,950)"/>
    <wire from="(840,330)" to="(840,400)"/>
    <wire from="(850,430)" to="(850,900)"/>
    <wire from="(850,900)" to="(1060,900)"/>
    <wire from="(860,310)" to="(880,310)"/>
    <wire from="(880,310)" to="(880,350)"/>
    <wire from="(880,350)" to="(900,350)"/>
    <wire from="(910,380)" to="(910,800)"/>
    <wire from="(910,800)" to="(1060,800)"/>
    <wire from="(920,150)" to="(920,280)"/>
    <wire from="(920,280)" to="(1010,280)"/>
    <wire from="(930,140)" to="(930,270)"/>
    <wire from="(930,270)" to="(1010,270)"/>
    <wire from="(930,360)" to="(1060,360)"/>
    <wire from="(950,130)" to="(950,230)"/>
    <wire from="(950,230)" to="(1010,230)"/>
    <wire from="(960,120)" to="(960,220)"/>
    <wire from="(960,220)" to="(1010,220)"/>
    <wire from="(980,110)" to="(980,190)"/>
    <wire from="(980,190)" to="(1060,190)"/>
  </circuit>
  <circuit name="Core">
    <a name="appearance" val="logisim_evolution"/>
    <a name="circuit" val="Core"/>
    <a name="circuitnamedboxfixedsize" val="true"/>
    <a name="simulationFrequency" val="1.0"/>
    <comp lib="0" loc="(1460,520)" name="Tunnel">
      <a name="label" val="DestinationRegister"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(1470,700)" name="Tunnel">
      <a name="label" val="MemWrite"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(1530,720)" name="Tunnel">
      <a name="label" val="Branch"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(1580,700)" name="Tunnel">
      <a name="label" val="MemtoReg"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(1640,680)" name="Tunnel">
      <a name="label" val="MemRead"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(1670,1060)" name="Tunnel">
      <a name="label" val="ALUSrc"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(1670,1160)" name="Tunnel">
      <a name="label" val="Flag"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(1670,520)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="DestinationRegister"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(1670,970)" name="Tunnel">
      <a name="label" val="RegWrite"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(1930,530)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(200,240)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="label" val="branchFlagTEMP"/>
    </comp>
    <comp lib="0" loc="(2070,600)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="EX_MEM_MemWrite_t"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(2090,560)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="MEM_WB_RDI"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(210,540)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="CLK"/>
    </comp>
    <comp lib="0" loc="(2100,620)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(2120,440)" name="Tunnel">
      <a name="label" val="WriteBackData"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2230,750)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(2230,890)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(2230,990)" name="Tunnel">
      <a name="facing" val="north"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(240,240)" name="Tunnel">
      <a name="label" val="branch_test"/>
    </comp>
    <comp lib="0" loc="(2430,480)" name="Tunnel">
      <a name="label" val="SecondOperand"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(2450,440)" name="Tunnel">
      <a name="label" val="x0_write_err"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(2490,860)" name="Bit Extender">
      <a name="in_width" val="4"/>
      <a name="out_width" val="7"/>
    </comp>
    <comp lib="0" loc="(250,200)" name="Pin">
      <a name="appearance" val="classic"/>
      <a name="label" val="jumpTEMP"/>
      <a name="radix" val="16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(260,570)" name="Tunnel">
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(2760,520)" name="Tunnel">
      <a name="label" val="ALUResult"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3020,380)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="ALUResult"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3020,530)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="SecondOperand"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3030,1090)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="MemtoReg"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3030,1130)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3030,1230)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="RegWrite"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3030,1270)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3030,420)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3030,570)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3030,670)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="DestinationRegister"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(3030,710)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3030,810)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="MemRead"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3030,850)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3030,940)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="MemWrite"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3030,980)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3130,380)" name="Tunnel">
      <a name="label" val="EX_MEM_ALU_t"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3130,530)" name="Tunnel">
      <a name="label" val="EX_MEM_RD2_t"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3130,670)" name="Tunnel">
      <a name="label" val="EX_MEM_RD_t"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(3130,810)" name="Tunnel">
      <a name="label" val="EX_MEM_MemRead_t"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3130,940)" name="Tunnel">
      <a name="label" val="EX_MEM_MemWrite_t"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(320,200)" name="Tunnel">
      <a name="label" val="jmp_ins_idx"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3240,850)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="MemRead_out"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(3240,980)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="MemWrite_out"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(3360,420)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="EX_MEM_ALU_t"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3360,490)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="EX_MEM_RD2_t"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3380,1080)" name="Tunnel">
      <a name="facing" val="south"/>
      <a name="label" val="EX_MEM_MemToReg_t"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3380,1220)" name="Tunnel">
      <a name="facing" val="south"/>
      <a name="label" val="EX_MEM_RegWrite_t"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(340,730)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="x0_write_err"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3410,420)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="0"/>
      <a name="bit11" val="0"/>
      <a name="bit12" val="0"/>
      <a name="bit13" val="0"/>
      <a name="bit14" val="0"/>
      <a name="bit15" val="none"/>
      <a name="bit16" val="none"/>
      <a name="bit17" val="none"/>
      <a name="bit18" val="none"/>
      <a name="bit19" val="none"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="none"/>
      <a name="bit21" val="none"/>
      <a name="bit22" val="none"/>
      <a name="bit23" val="none"/>
      <a name="bit24" val="none"/>
      <a name="bit25" val="none"/>
      <a name="bit26" val="none"/>
      <a name="bit27" val="none"/>
      <a name="bit28" val="none"/>
      <a name="bit29" val="none"/>
      <a name="bit3" val="0"/>
      <a name="bit30" val="none"/>
      <a name="bit31" val="none"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="0"/>
      <a name="bit9" val="0"/>
      <a name="fanout" val="1"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(3430,490)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="RD2_out"/>
      <a name="output" val="true"/>
      <a name="radix" val="16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3440,410)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="ALUDIR_out"/>
      <a name="output" val="true"/>
      <a name="radix" val="16"/>
      <a name="width" val="15"/>
    </comp>
    <comp lib="0" loc="(3580,860)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3580,950)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="EX_MEM_RD_t"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(3590,670)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="EX_MEM_ALU_t"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(3590,710)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3590,990)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3600,1130)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3600,1270)" name="Tunnel">
      <a name="facing" val="east"/>
      <a name="label" val="clk"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(3660,550)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="label" val="cache_data_in"/>
      <a name="radix" val="16"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(370,780)" name="Ground"/>
    <comp lib="0" loc="(3700,950)" name="Tunnel">
      <a name="label" val="MEM_WB_RDI"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="0" loc="(3710,1230)" name="Tunnel">
      <a name="label" val="MEM_WB_RegWrite"/>
      <a name="labelfont" val="SansSerif bold 10"/>
    </comp>
    <comp lib="0" loc="(380,450)" name="Tunnel">
      <a name="label" val="branch_test"/>
    </comp>
    <comp lib="0" loc="(3920,740)" name="Tunnel">
      <a name="label" val="WriteBackData"/>
      <a name="labelfont" val="SansSerif bold 10"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(410,410)" name="Tunnel">
      <a name="label" val="jmp_ins_idx"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="0" loc="(500,750)" name="Pin">
      <a name="appearance" val="NewPins"/>
      <a name="facing" val="west"/>
      <a name="label" val="systemErrorFlag"/>
      <a name="output" val="true"/>
    </comp>
    <comp lib="0" loc="(570,360)" name="Splitter">
      <a name="bit1" val="0"/>
      <a name="bit10" val="0"/>
      <a name="bit11" val="0"/>
      <a name="bit12" val="0"/>
      <a name="bit13" val="0"/>
      <a name="bit14" val="0"/>
      <a name="bit15" val="none"/>
      <a name="bit16" val="none"/>
      <a name="bit17" val="none"/>
      <a name="bit18" val="none"/>
      <a name="bit19" val="none"/>
      <a name="bit2" val="0"/>
      <a name="bit20" val="none"/>
      <a name="bit21" val="none"/>
      <a name="bit22" val="none"/>
      <a name="bit23" val="none"/>
      <a name="bit24" val="none"/>
      <a name="bit25" val="none"/>
      <a name="bit26" val="none"/>
      <a name="bit27" val="none"/>
      <a name="bit28" val="none"/>
      <a name="bit29" val="none"/>
      <a name="bit3" val="0"/>
      <a name="bit30" val="none"/>
      <a name="bit31" val="none"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="0"/>
      <a name="bit7" val="0"/>
      <a name="bit8" val="0"/>
      <a name="bit9" val="0"/>
      <a name="facing" val="south"/>
      <a name="fanout" val="1"/>
      <a name="incoming" val="32"/>
    </comp>
    <comp lib="0" loc="(890,520)" name="Constant"/>
    <comp lib="1" loc="(1610,1160)" name="OR Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(1630,1060)" name="OR Gate">
      <a name="inputs" val="6"/>
    </comp>
    <comp lib="1" loc="(1630,970)" name="OR Gate">
      <a name="inputs" val="7"/>
    </comp>
    <comp lib="1" loc="(1910,650)" name="OR Gate">
      <a name="size" val="30"/>
    </comp>
    <comp lib="1" loc="(340,450)" name="NOT Gate">
      <a name="facing" val="west"/>
    </comp>
    <comp lib="1" loc="(460,750)" name="OR Gate"/>
    <comp lib="2" loc="(2450,550)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(310,420)" name="Multiplexer">
      <a name="facing" val="west"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="2" loc="(3880,740)" name="Multiplexer">
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(1950,500)" name="Register">
      <a name="appearance" val="classic"/>
      <a name="label" val="RD"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="4" loc="(2250,720)" name="Register">
      <a name="appearance" val="classic"/>
      <a name="label" val="Inm"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(2250,860)" name="Register">
      <a name="appearance" val="classic"/>
      <a name="label" val="Code"/>
      <a name="width" val="4"/>
    </comp>
    <comp lib="4" loc="(2250,960)" name="Register">
      <a name="appearance" val="classic"/>
      <a name="label" val="Immediate"/>
      <a name="width" val="1"/>
    </comp>
    <comp lib="4" loc="(3040,1060)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="EX_MEM_MemToReg"/>
      <a name="width" val="1"/>
    </comp>
    <comp lib="4" loc="(3040,1200)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="EX_MEM_RegWrite"/>
      <a name="width" val="1"/>
    </comp>
    <comp lib="4" loc="(3040,350)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="EX_MEM_ALU"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(3040,500)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="EX_MEM_RD2"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(3040,640)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="EX_MEM_RD"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="4" loc="(3040,780)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="EX_MEM_MemRead"/>
      <a name="width" val="1"/>
    </comp>
    <comp lib="4" loc="(3040,910)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="EX_MEM_MemWrite"/>
      <a name="width" val="1"/>
    </comp>
    <comp lib="4" loc="(3600,640)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="MEM_WB_ALU"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(3600,790)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="MEM_WB_MEMDATA"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="4" loc="(3600,920)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="MEM_WB_RDI"/>
      <a name="width" val="5"/>
    </comp>
    <comp lib="4" loc="(3610,1060)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="MEM_WB_MemtoReg"/>
      <a name="width" val="1"/>
    </comp>
    <comp lib="4" loc="(3610,1200)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="MEM_WB_RegWrite"/>
      <a name="width" val="1"/>
    </comp>
    <comp lib="4" loc="(600,370)" name="RAM">
      <a name="addrWidth" val="15"/>
      <a name="appearance" val="classic"/>
      <a name="dataWidth" val="32"/>
      <a name="label" val="IM"/>
    </comp>
    <comp lib="4" loc="(890,470)" name="Register">
      <a name="appearance" val="logisim_evolution"/>
      <a name="label" val="IF_ID"/>
      <a name="width" val="32"/>
    </comp>
    <comp lib="8" loc="(1410,340)" name="Text">
      <a name="font" val="SansSerif bold 22"/>
      <a name="text" val="Decode"/>
    </comp>
    <comp lib="8" loc="(2580,365)" name="Text">
      <a name="font" val="SansSerif bold 22"/>
      <a name="text" val="Execute"/>
    </comp>
    <comp lib="8" loc="(2785,575)" name="Text">
      <a name="font" val="SansSerif plain 26"/>
      <a name="text" val="TIPO R"/>
    </comp>
    <comp lib="8" loc="(3265,265)" name="Text">
      <a name="font" val="SansSerif bold 22"/>
      <a name="text" val="Memory"/>
    </comp>
    <comp lib="8" loc="(3980,300)" name="Text">
      <a name="font" val="SansSerif bold 22"/>
      <a name="text" val="Writeback "/>
    </comp>
    <comp lib="8" loc="(715,345)" name="Text">
      <a name="font" val="SansSerif bold 22"/>
      <a name="text" val="Fetch"/>
    </comp>
    <comp loc="(1360,500)" name="IDecode"/>
    <comp loc="(2090,840)" name="alu_decoder">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(2340,520)" name="RegisterFile"/>
    <comp loc="(2730,520)" name="ALU">
      <a name="appearance" val="logisim_evolution"/>
    </comp>
    <comp loc="(500,480)" name="ProgramCounter"/>
    <wire from="(1360,500)" to="(1740,500)"/>
    <wire from="(1360,520)" to="(1460,520)"/>
    <wire from="(1360,540)" to="(1730,540)"/>
    <wire from="(1360,560)" to="(1970,560)"/>
    <wire from="(1360,580)" to="(2000,580)"/>
    <wire from="(1360,600)" to="(1720,600)"/>
    <wire from="(1360,620)" to="(1710,620)"/>
    <wire from="(1360,640)" to="(1420,640)"/>
    <wire from="(1360,660)" to="(1430,660)"/>
    <wire from="(1360,680)" to="(1440,680)"/>
    <wire from="(1360,700)" to="(1450,700)"/>
    <wire from="(1360,720)" to="(1530,720)"/>
    <wire from="(1360,740)" to="(1460,740)"/>
    <wire from="(1360,760)" to="(1470,760)"/>
    <wire from="(1360,780)" to="(1480,780)"/>
    <wire from="(1360,800)" to="(1490,800)"/>
    <wire from="(1360,820)" to="(1390,820)"/>
    <wire from="(1420,1000)" to="(1580,1000)"/>
    <wire from="(1420,640)" to="(1420,1000)"/>
    <wire from="(1420,640)" to="(1880,640)"/>
    <wire from="(1430,1090)" to="(1580,1090)"/>
    <wire from="(1430,660)" to="(1430,990)"/>
    <wire from="(1430,660)" to="(1880,660)"/>
    <wire from="(1430,990)" to="(1430,1090)"/>
    <wire from="(1430,990)" to="(1580,990)"/>
    <wire from="(1440,1080)" to="(1580,1080)"/>
    <wire from="(1440,680)" to="(1440,980)"/>
    <wire from="(1440,680)" to="(1560,680)"/>
    <wire from="(1440,980)" to="(1440,1080)"/>
    <wire from="(1440,980)" to="(1580,980)"/>
    <wire from="(1450,1070)" to="(1580,1070)"/>
    <wire from="(1450,700)" to="(1450,1070)"/>
    <wire from="(1450,700)" to="(1470,700)"/>
    <wire from="(1460,1170)" to="(1580,1170)"/>
    <wire from="(1460,740)" to="(1460,970)"/>
    <wire from="(1460,970)" to="(1460,1170)"/>
    <wire from="(1460,970)" to="(1580,970)"/>
    <wire from="(1470,1050)" to="(1470,1150)"/>
    <wire from="(1470,1050)" to="(1580,1050)"/>
    <wire from="(1470,1150)" to="(1580,1150)"/>
    <wire from="(1470,760)" to="(1470,960)"/>
    <wire from="(1470,960)" to="(1470,1050)"/>
    <wire from="(1470,960)" to="(1580,960)"/>
    <wire from="(1480,1040)" to="(1580,1040)"/>
    <wire from="(1480,780)" to="(1480,950)"/>
    <wire from="(1480,950)" to="(1480,1040)"/>
    <wire from="(1480,950)" to="(1580,950)"/>
    <wire from="(1490,1030)" to="(1580,1030)"/>
    <wire from="(1490,800)" to="(1490,940)"/>
    <wire from="(1490,940)" to="(1490,1030)"/>
    <wire from="(1490,940)" to="(1580,940)"/>
    <wire from="(1560,680)" to="(1560,700)"/>
    <wire from="(1560,680)" to="(1640,680)"/>
    <wire from="(1560,700)" to="(1580,700)"/>
    <wire from="(1610,1160)" to="(1670,1160)"/>
    <wire from="(1630,1060)" to="(1670,1060)"/>
    <wire from="(1630,970)" to="(1670,970)"/>
    <wire from="(1670,520)" to="(1890,520)"/>
    <wire from="(1710,620)" to="(1710,720)"/>
    <wire from="(1710,720)" to="(2220,720)"/>
    <wire from="(1720,600)" to="(1720,880)"/>
    <wire from="(1720,880)" to="(1870,880)"/>
    <wire from="(1730,540)" to="(1730,860)"/>
    <wire from="(1730,860)" to="(1870,860)"/>
    <wire from="(1740,500)" to="(1740,840)"/>
    <wire from="(1740,840)" to="(1870,840)"/>
    <wire from="(1890,500)" to="(1890,520)"/>
    <wire from="(1890,500)" to="(1920,500)"/>
    <wire from="(1910,650)" to="(1960,650)"/>
    <wire from="(1930,520)" to="(1930,530)"/>
    <wire from="(1950,500)" to="(2080,500)"/>
    <wire from="(1970,520)" to="(1970,560)"/>
    <wire from="(1970,520)" to="(2120,520)"/>
    <wire from="(200,240)" to="(240,240)"/>
    <wire from="(2000,540)" to="(2000,580)"/>
    <wire from="(2000,540)" to="(2120,540)"/>
    <wire from="(2070,600)" to="(2120,600)"/>
    <wire from="(2090,560)" to="(2120,560)"/>
    <wire from="(2090,840)" to="(2140,840)"/>
    <wire from="(2090,860)" to="(2100,860)"/>
    <wire from="(210,540)" to="(240,540)"/>
    <wire from="(2100,440)" to="(2100,580)"/>
    <wire from="(2100,440)" to="(2120,440)"/>
    <wire from="(2100,580)" to="(2120,580)"/>
    <wire from="(2100,620)" to="(2120,620)"/>
    <wire from="(2100,860)" to="(2100,960)"/>
    <wire from="(2100,960)" to="(2220,960)"/>
    <wire from="(2140,840)" to="(2140,860)"/>
    <wire from="(2140,860)" to="(2220,860)"/>
    <wire from="(2230,740)" to="(2230,750)"/>
    <wire from="(2230,880)" to="(2230,890)"/>
    <wire from="(2230,980)" to="(2230,990)"/>
    <wire from="(2250,720)" to="(2400,720)"/>
    <wire from="(2250,860)" to="(2450,860)"/>
    <wire from="(2250,960)" to="(2430,960)"/>
    <wire from="(2340,520)" to="(2510,520)"/>
    <wire from="(2340,540)" to="(2400,540)"/>
    <wire from="(2340,560)" to="(2360,560)"/>
    <wire from="(2360,440)" to="(2360,560)"/>
    <wire from="(2360,440)" to="(2450,440)"/>
    <wire from="(240,420)" to="(240,480)"/>
    <wire from="(240,420)" to="(310,420)"/>
    <wire from="(240,480)" to="(280,480)"/>
    <wire from="(240,540)" to="(240,570)"/>
    <wire from="(240,540)" to="(280,540)"/>
    <wire from="(240,570)" to="(260,570)"/>
    <wire from="(2400,480)" to="(2400,540)"/>
    <wire from="(2400,480)" to="(2430,480)"/>
    <wire from="(2400,540)" to="(2420,540)"/>
    <wire from="(2400,560)" to="(2400,720)"/>
    <wire from="(2400,560)" to="(2420,560)"/>
    <wire from="(2430,570)" to="(2430,960)"/>
    <wire from="(2450,550)" to="(2460,550)"/>
    <wire from="(2460,540)" to="(2460,550)"/>
    <wire from="(2460,540)" to="(2510,540)"/>
    <wire from="(2490,860)" to="(2500,860)"/>
    <wire from="(250,200)" to="(320,200)"/>
    <wire from="(2500,560)" to="(2500,860)"/>
    <wire from="(2500,560)" to="(2510,560)"/>
    <wire from="(2730,520)" to="(2760,520)"/>
    <wire from="(280,500)" to="(280,540)"/>
    <wire from="(280,540)" to="(560,540)"/>
    <wire from="(3020,380)" to="(3040,380)"/>
    <wire from="(3020,530)" to="(3040,530)"/>
    <wire from="(3030,1090)" to="(3040,1090)"/>
    <wire from="(3030,1130)" to="(3040,1130)"/>
    <wire from="(3030,1230)" to="(3040,1230)"/>
    <wire from="(3030,1270)" to="(3040,1270)"/>
    <wire from="(3030,420)" to="(3040,420)"/>
    <wire from="(3030,570)" to="(3040,570)"/>
    <wire from="(3030,670)" to="(3040,670)"/>
    <wire from="(3030,710)" to="(3040,710)"/>
    <wire from="(3030,810)" to="(3040,810)"/>
    <wire from="(3030,850)" to="(3040,850)"/>
    <wire from="(3030,940)" to="(3040,940)"/>
    <wire from="(3030,980)" to="(3040,980)"/>
    <wire from="(3100,1090)" to="(3380,1090)"/>
    <wire from="(3100,1230)" to="(3380,1230)"/>
    <wire from="(3100,380)" to="(3130,380)"/>
    <wire from="(3100,530)" to="(3130,530)"/>
    <wire from="(3100,670)" to="(3130,670)"/>
    <wire from="(3100,810)" to="(3110,810)"/>
    <wire from="(3100,940)" to="(3110,940)"/>
    <wire from="(3110,810)" to="(3110,850)"/>
    <wire from="(3110,810)" to="(3130,810)"/>
    <wire from="(3110,850)" to="(3240,850)"/>
    <wire from="(3110,940)" to="(3110,980)"/>
    <wire from="(3110,940)" to="(3130,940)"/>
    <wire from="(3110,980)" to="(3240,980)"/>
    <wire from="(330,440)" to="(330,450)"/>
    <wire from="(330,450)" to="(340,450)"/>
    <wire from="(3360,420)" to="(3410,420)"/>
    <wire from="(3360,490)" to="(3430,490)"/>
    <wire from="(3380,1080)" to="(3380,1090)"/>
    <wire from="(3380,1090)" to="(3610,1090)"/>
    <wire from="(3380,1220)" to="(3380,1230)"/>
    <wire from="(3380,1230)" to="(3610,1230)"/>
    <wire from="(340,410)" to="(410,410)"/>
    <wire from="(340,430)" to="(500,430)"/>
    <wire from="(340,730)" to="(410,730)"/>
    <wire from="(3430,410)" to="(3440,410)"/>
    <wire from="(3490,590)" to="(3490,820)"/>
    <wire from="(3490,590)" to="(3710,590)"/>
    <wire from="(3490,820)" to="(3600,820)"/>
    <wire from="(3580,860)" to="(3600,860)"/>
    <wire from="(3580,950)" to="(3600,950)"/>
    <wire from="(3590,670)" to="(3600,670)"/>
    <wire from="(3590,710)" to="(3600,710)"/>
    <wire from="(3590,990)" to="(3600,990)"/>
    <wire from="(3600,1130)" to="(3610,1130)"/>
    <wire from="(3600,1270)" to="(3610,1270)"/>
    <wire from="(3660,550)" to="(3710,550)"/>
    <wire from="(3660,670)" to="(3810,670)"/>
    <wire from="(3660,820)" to="(3810,820)"/>
    <wire from="(3660,950)" to="(3700,950)"/>
    <wire from="(3670,1090)" to="(3860,1090)"/>
    <wire from="(3670,1230)" to="(3710,1230)"/>
    <wire from="(370,450)" to="(380,450)"/>
    <wire from="(370,770)" to="(370,780)"/>
    <wire from="(370,770)" to="(410,770)"/>
    <wire from="(3710,550)" to="(3710,590)"/>
    <wire from="(3810,670)" to="(3810,730)"/>
    <wire from="(3810,730)" to="(3850,730)"/>
    <wire from="(3810,750)" to="(3810,820)"/>
    <wire from="(3810,750)" to="(3850,750)"/>
    <wire from="(3860,760)" to="(3860,1090)"/>
    <wire from="(3880,740)" to="(3920,740)"/>
    <wire from="(460,750)" to="(500,750)"/>
    <wire from="(500,430)" to="(500,480)"/>
    <wire from="(500,500)" to="(540,500)"/>
    <wire from="(540,360)" to="(540,500)"/>
    <wire from="(540,360)" to="(570,360)"/>
    <wire from="(560,440)" to="(560,540)"/>
    <wire from="(560,440)" to="(600,440)"/>
    <wire from="(560,540)" to="(890,540)"/>
    <wire from="(580,380)" to="(600,380)"/>
    <wire from="(840,460)" to="(870,460)"/>
    <wire from="(870,460)" to="(870,500)"/>
    <wire from="(870,500)" to="(890,500)"/>
    <wire from="(950,500)" to="(1140,500)"/>
  </circuit>
  <vhdl name="ALU">library IEEE;&#13;
use IEEE.STD_LOGIC_1164.ALL;&#13;
&#13;
entity ALU is&#13;
  port (&#13;
    A   : in  STD_LOGIC_VECTOR(31 downto 0);&#13;
    B   : in  STD_LOGIC_VECTOR(31 downto 0);&#13;
    Op  : in  STD_LOGIC_VECTOR(6 downto 0);  -- solo Op(2 downto 0) importa&#13;
         -- 000 = ADD&#13;
         -- 001 = SUB&#13;
         -- 010 = AND&#13;
         -- 011 = OR&#13;
         -- 100 = XOR&#13;
         -- 101 = SLL&#13;
         -- 110 = SRL&#13;
         -- 111 = SRA&#13;
    Y   : out STD_LOGIC_VECTOR(31 downto 0)&#13;
  );&#13;
end entity ALU;&#13;
&#13;
architecture Behavioral of ALU is&#13;
begin&#13;
  process(A, B, Op)&#13;
    variable tmp    : STD_LOGIC_VECTOR(31 downto 0);&#13;
    variable carry  : STD_LOGIC;&#13;
    variable i      : integer range 0 to 31;&#13;
    variable Binv   : STD_LOGIC_VECTOR(31 downto 0);&#13;
    variable shamt  : integer range 0 to 31;&#13;
  begin&#13;
    -- 1) Calcular shift-amount (5 LSB de B)&#13;
    shamt := 0;&#13;
    for i in 0 to 4 loop&#13;
      if B(i) = '1' then&#13;
        shamt := shamt + (2**i);&#13;
      end if;&#13;
    end loop;&#13;
&#13;
    -- 2) Inicializar&#13;
    tmp   := (others =&gt; '0');&#13;
    carry := '0';&#13;
&#13;
    -- 3) Seleccionar operación&#13;
    case Op(2 downto 0) is&#13;
&#13;
      when "000" =&gt;  -- ADD&#13;
        for i in 0 to 31 loop&#13;
          tmp(i)  := A(i) xor B(i) xor carry;&#13;
          carry   := (A(i) and B(i)) or (carry and (A(i) xor B(i)));&#13;
        end loop;&#13;
&#13;
      when "001" =&gt;  -- SUB = A + not(B) + 1&#13;
        for i in 0 to 31 loop&#13;
          Binv(i) := not B(i);&#13;
        end loop;&#13;
        carry := '1';&#13;
        for i in 0 to 31 loop&#13;
          tmp(i)  := A(i) xor Binv(i) xor carry;&#13;
          carry   := (A(i) and Binv(i)) or (carry and (A(i) xor Binv(i)));&#13;
        end loop;&#13;
&#13;
      when "010" =&gt;  -- AND&#13;
        for i in 0 to 31 loop&#13;
          tmp(i) := A(i) and B(i);&#13;
        end loop;&#13;
&#13;
      when "011" =&gt;  -- OR&#13;
        for i in 0 to 31 loop&#13;
          tmp(i) := A(i) or B(i);&#13;
        end loop;&#13;
&#13;
      when "100" =&gt;  -- XOR&#13;
        for i in 0 to 31 loop&#13;
          tmp(i) := A(i) xor B(i);&#13;
        end loop;&#13;
&#13;
      when "101" =&gt;  -- SLL (logical left)&#13;
        for i in 31 downto 0 loop&#13;
          if i - shamt &gt;= 0 then&#13;
            tmp(i) := A(i - shamt);&#13;
          else&#13;
            tmp(i) := '0';&#13;
          end if;&#13;
        end loop;&#13;
&#13;
      when "110" =&gt;  -- SRL (logical right)&#13;
        for i in 0 to 31 loop&#13;
          if i + shamt &lt;= 31 then&#13;
            tmp(i) := A(i + shamt);&#13;
          else&#13;
            tmp(i) := '0';&#13;
          end if;&#13;
        end loop;&#13;
&#13;
      when "111" =&gt;  -- SRA (arithmetic right)&#13;
        for i in 0 to 31 loop&#13;
          if i + shamt &lt;= 31 then&#13;
            tmp(i) := A(i + shamt);&#13;
          else&#13;
            tmp(i) := A(31);  -- rellena con el bit de signo&#13;
          end if;&#13;
        end loop;&#13;
&#13;
      when others =&gt;&#13;
        tmp := (others =&gt; '0');&#13;
    end case;&#13;
&#13;
    -- 4) Entregar resultado&#13;
    Y &lt;= tmp;&#13;
  end process;&#13;
end architecture Behavioral;&#13;
</vhdl>
  <vhdl name="msi_protocol">library ieee;&#13;
use ieee.std_logic_1164.all;&#13;
use ieee.numeric_std.all;&#13;
&#13;
entity msi_protocol is&#13;
    port (&#13;
        clk             : in std_logic;&#13;
        reset           : in std_logic;&#13;
        cpu0_state      : in std_logic_vector(1 downto 0); -- MSI state for cpu0&#13;
        cpu1_state      : in std_logic_vector(1 downto 0); -- MSI state for cpu1&#13;
        cpu0_addr       : in std_logic_vector(31 downto 0);   -- Address from cpu0&#13;
        cpu1_addr       : in std_logic_vector(31 downto 0);   -- Address from cpu1&#13;
        invalidate_cpu0 : out std_logic;                      -- Invalidate signal for cpu0&#13;
        invalidate_cpu1 : out std_logic                       -- Invalidate signal for cpu1&#13;
    );&#13;
end msi_protocol;&#13;
&#13;
architecture Behavioral of msi_protocol is&#13;
begin&#13;
    process(clk, reset)&#13;
    begin&#13;
        if reset = '1' then&#13;
            invalidate_cpu0 &lt;= '0';&#13;
            invalidate_cpu1 &lt;= '0';&#13;
        elsif rising_edge(clk) then&#13;
            -- If CPU0 modifies a cache line, invalidate the corresponding line in CPU1&#13;
            if cpu0_state = "10" then -- Modified state in cpu0&#13;
                if cpu1_state = "01" and cpu0_addr = cpu1_addr then -- Shared state in cpu1 for the same address&#13;
                    invalidate_cpu1 &lt;= '1'; -- Invalidate the cache line in cpu1&#13;
                else&#13;
                    invalidate_cpu1 &lt;= '0';&#13;
                end if;&#13;
            end if;&#13;
            &#13;
            -- If CPU1 modifies a cache line, invalidate the corresponding line in CPU0&#13;
            if cpu1_state = "10" then -- Modified state in cpu1&#13;
                if cpu0_state = "01" and cpu1_addr = cpu0_addr then -- Shared state in cpu0 for the same address&#13;
                    invalidate_cpu0 &lt;= '1'; -- Invalidate the cache line in cpu0&#13;
                else&#13;
                    invalidate_cpu0 &lt;= '0';&#13;
                end if;&#13;
            end if;&#13;
        end if;&#13;
    end process;&#13;
end Behavioral;&#13;</vhdl>
  <vhdl name="FIFO">library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity FIFO is
  port(
    clk            : in  std_logic;	-- system clock
    rst            : in  std_logic;	-- synchronous reset

    -- CPU0 interface
    cpu0_read_in   : in  std_logic;					-- CPU0 read request (1 = read)
    cpu0_write_in  : in  std_logic;					-- CPU0 write request (1 = write)
    cpu0_data_in   : in  std_logic_vector(31 downto 0);	-- CPU0 write data
    cpu0_addr      : in  std_logic_vector(2 downto 0);	-- CPU0 address

    -- CPU1 interface
    cpu1_read_in   : in  std_logic;
    cpu1_write_in  : in  std_logic;
    cpu1_data_in   : in  std_logic_vector(31 downto 0);
    cpu1_addr      : in  std_logic_vector(2 downto 0);

    -- Output to SDRAM
    read_out       : out std_logic;	-- 1 = perform read
    write_out      : out std_logic;	-- 1 = perform write

    addr_out       : out std_logic_vector(2 downto 0);	-- address to SDRAM
    data_out       : out std_logic_vector(31 downto 0)	-- data to SDRAM (for writes)
  );
end entity FIFO;

architecture behavior of FIFO is
  -- record and array _types_
  type sdramrequest is record
    requester : std_logic;			-- '0' = CPU0, '1' = CPU1
    operation : std_logic;            	-- 0 = read, 1 = write
    address   : std_logic_vector(2 downto 0);
    data      : std_logic_vector(31 downto 0);
    valid     : std_logic;
  end record sdramrequest;

  -- circular buffer of 1024 requests
  type sdramRequestBuffer is array(0 to 1023) of sdramrequest;

  -- allocate the buffer signal 
  signal request_buf : sdramRequestBuffer := (
    others =&gt; (
      requester =&gt; '0',
      operation =&gt; '0',
      address   =&gt; (others =&gt; '0'),
      data      =&gt; (others =&gt; '0'),
      valid     =&gt; '0'
    )
  );

  -- track which CPU was last served 
  signal previousRequester : std_logic;  -- 0 is cpu0, 1 is cpu1

begin

  process(clk, rst)
  begin
    if rst = '1' then
    	 -- synchronous reset: clear buffer and outputs
      -- clear buffer on reset
      request_buf &lt;= (others =&gt; (
        requester =&gt; '0',
        operation =&gt; '0',
        address   =&gt; (others =&gt; '0'),
        data      =&gt; (others =&gt; '0'),
        valid     =&gt; '0'
      ));
      read_out  &lt;= '0';
      write_out &lt;= '0';
      previousRequester &lt;= '0';

    elsif rising_edge(clk) then

    	 -- if there’s a pending SDRAM request at buffer slot 0
      if request_buf(0).valid = '1' then
        -- dequeue slot 0
        read_out  &lt;= not request_buf(0).operation;
        write_out &lt;=     request_buf(0).operation;
        addr_out  &lt;=     request_buf(0).address;
        data_out  &lt;=     request_buf(0).data;

        -- once served, invalidate this slot
        request_buf(0).valid &lt;= '0';

      else
      -- buffer is empty → directly arbitrate between CPU0 &amp; CPU1

        -- 1) No requests from either CPU
        if cpu0_read_in='0' and cpu0_write_in='0'
           and cpu1_read_in='0' and cpu1_write_in='0' then

          read_out  &lt;= '0';
          write_out &lt;= '0';

        -- 2) CPU1 wants to write only
        elsif cpu0_read_in='0' and cpu0_write_in='0'
           and cpu1_read_in='0' and cpu1_write_in='1' then

          read_out          &lt;= '0';
          write_out         &lt;= '1';
          previousRequester &lt;= '1';

        -- 3) CPU1 wants to read only
        elsif cpu0_read_in='0' and cpu0_write_in='0'
           and cpu1_read_in='1' and cpu1_write_in='0' then

          read_out          &lt;= '1';
          write_out         &lt;= '0';
          previousRequester &lt;= '1';

        -- 4) CPU0 wants to write only
        elsif cpu0_read_in='0' and cpu0_write_in='1'
           and cpu1_read_in='0' and cpu1_write_in='0' then

          read_out          &lt;= '0';
          write_out         &lt;= '1';
          previousRequester &lt;= '0';

        -- 5) CPU0 wants to read only
        elsif cpu0_read_in='1' and cpu0_write_in='0'
           and cpu1_read_in='0' and cpu1_write_in='0' then

          read_out          &lt;= '1';
          write_out         &lt;= '0';
          previousRequester &lt;= '0';

        -- 6) Both CPUs want to read → enqueue CPU1’s read
        elsif cpu0_read_in='1' and cpu0_write_in='0'
           and cpu1_read_in='1' and cpu1_write_in='0' then

          read_out          &lt;= '1';
          write_out         &lt;= '0';
          previousRequester &lt;= '0';

          request_buf(0).requester &lt;= '1';        -- from CPU1
          request_buf(0).operation &lt;= '0';        -- read
          request_buf(0).address   &lt;= cpu1_addr;
          request_buf(0).valid     &lt;= '1';

        -- 7) CPU0 read &amp; CPU1 write → enqueue CPU1’s write
        elsif cpu0_read_in='1' and cpu0_write_in='0'
           and cpu1_read_in='0' and cpu1_write_in='1' then

          read_out          &lt;= '1';
          write_out         &lt;= '0';
          previousRequester &lt;= '0';

          request_buf(0).requester &lt;= '1';
          request_buf(0).operation &lt;= '1';        -- write
          request_buf(0).address   &lt;= cpu1_addr;
          request_buf(0).data      &lt;= cpu1_data_in;
          request_buf(0).valid     &lt;= '1';

        -- 8) CPU0 write &amp; CPU1 read → enqueue CPU1’s read
        elsif cpu0_read_in='0' and cpu0_write_in='1'
           and cpu1_read_in='1' and cpu1_write_in='0' then

          read_out          &lt;= '0';
          write_out         &lt;= '1';
          previousRequester &lt;= '0';

          request_buf(0).requester &lt;= '1';
          request_buf(0).operation &lt;= '0';        -- read
          request_buf(0).address   &lt;= cpu1_addr;
          request_buf(0).valid     &lt;= '1';

        -- 9) Both CPUs want to write → enqueue CPU1’s write
        elsif cpu0_read_in='0' and cpu0_write_in='1'
           and cpu1_read_in='0' and cpu1_write_in='1' then

          read_out          &lt;= '0';
          write_out         &lt;= '1';
          previousRequester &lt;= '0';

          request_buf(0).requester &lt;= '1';
          request_buf(0).operation &lt;= '1';
          request_buf(0).address   &lt;= cpu1_addr;
          request_buf(0).data      &lt;= cpu1_data_in;
          request_buf(0).valid     &lt;= '1';

        end if;
      end if;

    end if;
  end process;

end architecture behavior;
</vhdl>
  <vhdl name="TransactionsBetweenCPU">library ieee;
use ieee.std_logic_1164.all;

LIBRARY work;

entity TransactionsBetweenCPU is
  port(
    clk             : in  std_logic;                    -- system clock
    rst             : in  std_logic;                    -- synchronous reset
    cpu0_prio       : in  std_logic;                    -- arbitration priority for CPU0
    cpu1_prio       : in  std_logic;                    -- arbitration priority for CPU1
    cpu0_wantedAddr : in  std_logic_vector(2 downto 0); -- CPU0 target address
    cpu1_wantedAddr : in  std_logic_vector(2 downto 0)  -- CPU1 target address
  );
end entity TransactionsBetweenCPU;

architecture bdf_type of TransactionsBetweenCPU is

  -- CPU core component
  component CPU_Core is
    port(
      clk                          : in  std_logic;
      reset                        : in  std_logic;
      priority                     : in  std_logic;
      cpu_wr_req_in                : in  std_logic;
      cpu_rd_req_in                : in  std_logic;
      cache_to_cache_resp_in_ready: in  std_logic;
      cache_to_cache_resp_in       : in  std_logic;
      cache_to_cache_req_in        : in  std_logic;
      cache_to_cache_req_address_in: in  std_logic_vector(2 downto 0);
      cache_to_cache_resp_in_data  : in  std_logic_vector(31 downto 0);
      cpu_req_addr_in              : in  std_logic_vector(2 downto 0);
      Sdram_data_in                : in  std_logic_vector(31 downto 0);
      wantedAddress                : in  std_logic_vector(2 downto 0);
      read_en                      : out std_logic;
      write_en                     : out std_logic;
      cpu_wr_req_out               : out std_logic;
      cpu_rd_req_out               : out std_logic;
      cache_to_cache_resp_out_ready: out std_logic;
      cache_to_cache_resp_out      : out std_logic;
      cache_to_cache_req_out       : out std_logic;
      cache_to_cache_req_address_out: out std_logic_vector(2 downto 0);
      cache_to_cache_resp_out_data : out std_logic_vector(31 downto 0);
      cpu_req_addr_out             : out std_logic_vector(2 downto 0);
      Sdram_addr                   : out std_logic_vector(2 downto 0);
      Sdram_data_out               : out std_logic_vector(31 downto 0)
    );
  end component;


  -- SDRAM component
  component sdram is
    port(
      clk        : in  std_logic;
      reset      : in  std_logic;
      operation1 : in  std_logic;                     -- 0=read, 1=write on port1
      operation2 : in  std_logic;                     -- 0=read, 1=write on port2
      ready1     : in  std_logic;                     -- handshake from CPU1
      ready2     : in  std_logic;                     -- handshake from CPU2
      addr1      : in  std_logic_vector(2 downto 0);
      addr2      : in  std_logic_vector(2 downto 0);
      data_in1   : in  std_logic_vector(31 downto 0); -- CPU→SDRAM data
      data_in2   : in  std_logic_vector(31 downto 0);
      data_out1  : out std_logic_vector(31 downto 0); -- SDRAM→CPU data
      data_out2  : out std_logic_vector(31 downto 0)
    );
  end component;

  -- Internal signals for cache‐to‐cache traffic
  signal cpu0_cache_to_cache_req              : std_logic;
  signal cpu0_cache_to_cache_req_addr         : std_logic_vector(2 downto 0);
  signal cpu0_cache_to_cache_resp_data        : std_logic_vector(31 downto 0);
  signal cpu0_cache_to_cache_response         : std_logic;
  signal cpu0_cache_to_cache_response_out_ready : std_logic;
  signal cpu0_wr_req_out                      : std_logic;
  signal cpu0_rd_req_out                      : std_logic;
  signal cpu0_req_addr_out                    : std_logic_vector(2 downto 0);

  signal cpu1_cache_to_cache_req              : std_logic;
  signal cpu1_cache_to_cache_req_addr         : std_logic_vector(2 downto 0);
  signal cpu1_cache_to_cache_resp_data        : std_logic_vector(31 downto 0);
  signal cpu1_cache_to_cache_response         : std_logic;
  signal cpu1_cache_to_cache_response_out_ready : std_logic;
  signal cpu1_wr_req_out                      : std_logic;
  signal cpu1_rd_req_out                      : std_logic;
  signal cpu1_req_addr_out                    : std_logic_vector(2 downto 0);

  -- Read/Write enable flags from each CPU
  signal r_en1  : std_logic;
  signal wr_en1 : std_logic;
  signal r_en2  : std_logic;
  signal wr_en2 : std_logic;

  -- Combined “ready” lines into SDRAM
  signal ready1_sig : std_logic;
  signal ready2_sig : std_logic;

  -- Address buses from CPU → SDRAM
  signal sdram_addr1 : std_logic_vector(2 downto 0);
  signal sdram_addr2 : std_logic_vector(2 downto 0);

  -- Data buses CPU → SDRAM
  signal sdram_data_out1 : std_logic_vector(31 downto 0);
  signal sdram_data_out2 : std_logic_vector(31 downto 0);

  -- Data buses SDRAM → CPU
  signal sdram_data_in1  : std_logic_vector(31 downto 0);
  signal sdram_data_in2  : std_logic_vector(31 downto 0);

begin

  -- Generate “ready” handshake for SDRAM ports
  ready1_sig &lt;= wr_en1 or r_en1;
  ready2_sig &lt;= wr_en2 or r_en2;

  -- CPU Core #0 instance
  core0: CPU_Core
    port map(
      clk                            =&gt; clk,
      reset                          =&gt; rst,
      priority                       =&gt; cpu0_prio,
      cpu_wr_req_in                  =&gt; cpu1_wr_req_out,
      cpu_rd_req_in                  =&gt; cpu1_rd_req_out,
      cache_to_cache_resp_in_ready   =&gt; cpu1_cache_to_cache_response_out_ready,
      cache_to_cache_resp_in         =&gt; cpu1_cache_to_cache_response,
      cache_to_cache_req_in          =&gt; cpu1_cache_to_cache_req,
      cache_to_cache_req_address_in  =&gt; cpu1_cache_to_cache_req_addr,
      cache_to_cache_resp_in_data    =&gt; cpu1_cache_to_cache_resp_data,
      cpu_req_addr_in                =&gt; cpu1_req_addr_out,
      Sdram_data_in                  =&gt; sdram_data_in1,     -- from SDRAM
      wantedAddress                  =&gt; cpu0_wantedAddr,
      read_en                        =&gt; r_en1,
      write_en                       =&gt; wr_en1,
      cpu_wr_req_out                 =&gt; cpu0_wr_req_out,
      cpu_rd_req_out                 =&gt; cpu0_rd_req_out,
      cache_to_cache_resp_out_ready  =&gt; cpu0_cache_to_cache_response_out_ready,
      cache_to_cache_resp_out        =&gt; cpu0_cache_to_cache_response,
      cache_to_cache_req_out         =&gt; cpu0_cache_to_cache_req,
      cache_to_cache_req_address_out =&gt; cpu0_cache_to_cache_req_addr,
      cache_to_cache_resp_out_data   =&gt; cpu0_cache_to_cache_resp_data,
      cpu_req_addr_out               =&gt; cpu0_req_addr_out,
      Sdram_addr                     =&gt; sdram_addr1,         -- to SDRAM
      Sdram_data_out                 =&gt; sdram_data_out1      -- to SDRAM
    );

  -- CPU Core #1 instance
  core1: CPU_Core
    port map(
      clk                            =&gt; clk,
      reset                          =&gt; rst,
      priority                       =&gt; cpu1_prio,
      cpu_wr_req_in                  =&gt; cpu0_wr_req_out,
      cpu_rd_req_in                  =&gt; cpu0_rd_req_out,
      cache_to_cache_resp_in_ready   =&gt; cpu0_cache_to_cache_response_out_ready,
      cache_to_cache_resp_in         =&gt; cpu0_cache_to_cache_response,
      cache_to_cache_req_in          =&gt; cpu0_cache_to_cache_req,
      cache_to_cache_req_address_in  =&gt; cpu0_cache_to_cache_req_addr,
      cache_to_cache_resp_in_data    =&gt; cpu0_cache_to_cache_resp_data,
      cpu_req_addr_in                =&gt; cpu0_req_addr_out,
      Sdram_data_in                  =&gt; sdram_data_in2,     -- from SDRAM
      wantedAddress                  =&gt; cpu1_wantedAddr,
      read_en                        =&gt; r_en2,
      write_en                       =&gt; wr_en2,
      cpu_wr_req_out                 =&gt; cpu1_wr_req_out,
      cpu_rd_req_out                 =&gt; cpu1_rd_req_out,
      cache_to_cache_resp_out_ready  =&gt; cpu1_cache_to_cache_response_out_ready,
      cache_to_cache_resp_out        =&gt; cpu1_cache_to_cache_response,
      cache_to_cache_req_out         =&gt; cpu1_cache_to_cache_req,
      cache_to_cache_req_address_out =&gt; cpu1_cache_to_cache_req_addr,
      cache_to_cache_resp_out_data   =&gt; cpu1_cache_to_cache_resp_data,
      cpu_req_addr_out               =&gt; cpu1_req_addr_out,
      Sdram_addr                     =&gt; sdram_addr2,         -- to SDRAM
      Sdram_data_out                 =&gt; sdram_data_out2      -- to SDRAM
    );

  -- SDRAM instance (port‐interleaved two‐port memory)
  sdram0: sdram
    port map(
      clk        =&gt; clk,
      reset      =&gt; rst,
      operation1 =&gt; wr_en1,           -- write when wr_en1='1'
      operation2 =&gt; wr_en2,           -- write when wr_en2='1'
      ready1     =&gt; ready1_sig,
      ready2     =&gt; ready2_sig,
      addr1      =&gt; sdram_addr1,
      addr2      =&gt; sdram_addr2,
      data_in1   =&gt; sdram_data_out1,  -- CPU0 → SDRAM
      data_in2   =&gt; sdram_data_out2,  -- CPU1 → SDRAM
      data_out1  =&gt; sdram_data_in1,   -- SDRAM → CPU0
      data_out2  =&gt; sdram_data_in2    -- SDRAM → CPU1
    );

end architecture bdf_type;
</vhdl>
  <vhdl name="alu_decoder">library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity alu_decoder is
  port (
    opcode  : in  std_logic_vector(6 downto 0);
    funct3  : in  std_logic_vector(2 downto 0);
    funct7  : in  std_logic_vector(6 downto 0);
    
    instr_code : out std_logic_vector(3 downto 0);
    is_imm     : out std_logic
  );
end entity alu_decoder;

architecture rtl of alu_decoder is

  -- Códigos internos para cada operación
  subtype icode_t is std_logic_vector(3 downto 0);
  constant I_ADD   : icode_t := "0000";
  constant I_SUB   : icode_t := "0001";
  constant I_ADDI  : icode_t := "0010";
  constant I_AND   : icode_t := "0011";
  constant I_OR    : icode_t := "0100";
  constant I_XOR   : icode_t := "0101";
  constant I_ANDI  : icode_t := "0110";
  constant I_ORI   : icode_t := "0111";
  constant I_XORI  : icode_t := "1000";
  constant I_SLL   : icode_t := "1001";
  constant I_SRL   : icode_t := "1010";
  constant I_SRA   : icode_t := "1011";
  constant I_NONE  : icode_t := "1111";  -- ningún match

begin

  process(opcode, funct3, funct7)
  begin
    -- Valor por defecto
    instr_code &lt;= I_NONE;
    is_imm     &lt;= '0';

    case opcode is

      -- R-TYPE: opcode = "0110011"
      when "0110011" =&gt;
        is_imm &lt;= '0';
        case funct3 is
          when "000" =&gt;
            if funct7 = "0000000" then
                instr_code &lt;= I_ADD;
            elsif funct7 = "0100000" then
                instr_code &lt;= I_SUB;
            end if;
          when "111" =&gt;
            instr_code &lt;= I_AND;
          when "110" =&gt;
            instr_code &lt;= I_OR;
          when "100" =&gt;
            instr_code &lt;= I_XOR;
          when "001" =&gt;
            instr_code &lt;= I_SLL;
          when "101" =&gt;
            if funct7 = "0000000" then
              instr_code &lt;= I_SRL;
            elsif funct7 = "0100000" then
              instr_code &lt;= I_SRA;
            end if;
          when others =&gt;
            instr_code &lt;= I_NONE;
        end case;

      -- I-TYPE aritméticas: opcode = "0010011"
      when "0010011" =&gt;
        is_imm &lt;= '1';
        case funct3 is
          when "000" =&gt;
            instr_code &lt;= I_ADDI;
          when "111" =&gt;
            instr_code &lt;= I_ANDI;
          when "110" =&gt;
            instr_code &lt;= I_ORI;
          when "100" =&gt;
            instr_code &lt;= I_XORI;
          -- (si deseases SLLI, SRLI, SRAI, habría que chequear funct7 también)
          when others =&gt;
            instr_code &lt;= I_NONE;
        end case;

      when others =&gt;
        instr_code &lt;= I_NONE;
        is_imm     &lt;= '0';
    end case;
  end process;

end architecture rtl;
</vhdl>
  <vhdl name="CPU_Core">
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity CPU_Core is
    port (
        clk            : in std_logic;
        reset          : in std_logic;
        priority       : in std_logic;
        
        -- CPU interface
        wantedAddress  : in std_logic_vector(2 downto 0);
        
        -- SDRAM interface
        read_en        : out std_logic;
        write_en       : out std_logic;
        Sdram_addr     : out std_logic_vector(2 downto 0);
        Sdram_data_in  : in std_logic_vector(31 downto 0);
        Sdram_data_out : out std_logic_vector(31 downto 0);
        
        -- MSI protocol - outgoing requests
        cpu_wr_req_out : out std_logic;
        cpu_rd_req_out : out std_logic;
        cpu_req_addr_out : out std_logic_vector(2 downto 0);
        
        -- MSI protocol - incoming requests (snooping)
        cpu_wr_req_in  : in std_logic;
        cpu_rd_req_in  : in std_logic;
        cpu_req_addr_in : in std_logic_vector(2 downto 0);
        
        -- Cache-to-cache communication - outgoing
        cache_to_cache_req_out : out std_logic;
        cache_to_cache_req_address_out : out std_logic_vector(2 downto 0);
        cache_to_cache_resp_out : out std_logic;
        cache_to_cache_resp_out_ready : out std_logic;
        cache_to_cache_resp_out_data : out std_logic_vector(31 downto 0);
        
        -- Cache-to-cache communication - incoming
        cache_to_cache_req_in : in std_logic;
        cache_to_cache_req_address_in : in std_logic_vector(2 downto 0);
        cache_to_cache_resp_in : in std_logic;
        cache_to_cache_resp_in_ready : in std_logic;
        cache_to_cache_resp_in_data : in std_logic_vector(31 downto 0)
    );
end CPU_Core;

architecture Behavioral of CPU_Core is
    -- Cache configuration
    constant CACHE_SIZE : integer := 4;
    
    -- MSI states
    type msi_state_type is (MSI_INVALID, MSI_SHARED, MSI_MODIFIED);
    
    -- Cache line structure
    type cache_line_type is record
        msi_state : msi_state_type;
        address   : std_logic_vector(2 downto 0);
        data      : std_logic_vector(31 downto 0);
        valid     : std_logic;
    end record;
    
    type cache_array_type is array (0 to CACHE_SIZE-1) of cache_line_type;
    
    -- CPU operation states
    type cpu_state_type is (CPU_IDLE, CPU_READ, CPU_WRITE, CPU_WAIT_CACHE, CPU_WAIT_SDRAM);
    
    -- Cache operation states  
    type cache_state_type is (CACHE_CHECK, CACHE_HIT, CACHE_MISS, CACHE_COHERENCE, CACHE_SDRAM_ACCESS);
    
    -- Signals
    signal cache_mem : cache_array_type;
    signal cpu_state : cpu_state_type;
    signal cache_state : cache_state_type;
    signal current_address : std_logic_vector(2 downto 0);
    signal current_data : std_logic_vector(31 downto 0);
    signal cache_hit_flag : std_logic;
    signal cache_hit_index : integer range 0 to CACHE_SIZE-1;
    signal evict_index : integer range 0 to CACHE_SIZE-1;
    signal operation_type : std_logic; -- 0 = read, 1 = write
    signal cycle_counter : integer range 0 to 15;
    
    -- Helper functions
    function find_cache_line(addr : std_logic_vector(2 downto 0); cache_mem : cache_array_type) 
        return integer is
    begin
        for i in 0 to CACHE_SIZE-1 loop
            if cache_mem(i).valid = '1' and cache_mem(i).address = addr then
                return i;
            end if;
        end loop;
        return -1; -- Not found
    end function;
    
    function find_empty_line(cache_mem : cache_array_type) return integer is
    begin
        for i in 0 to CACHE_SIZE-1 loop
            if cache_mem(i).valid = '0' then
                return i;
            end if;
        end loop;
        return -1; -- Cache full
    end function;

begin

    -- Main cache controller process
    main_process: process(clk, reset)
        variable hit_index : integer;
        variable empty_index : integer;
    begin
        if reset = '1' then
            -- Initialize cache
            for i in 0 to CACHE_SIZE-1 loop
                cache_mem(i).msi_state &lt;= MSI_INVALID;
                cache_mem(i).address &lt;= (others =&gt; '0');
                cache_mem(i).data &lt;= (others =&gt; '0');
                cache_mem(i).valid &lt;= '0';
            end loop;
            
            -- Reset state machines
            cpu_state &lt;= CPU_IDLE;
            cache_state &lt;= CACHE_CHECK;
            
            -- Reset outputs
            read_en &lt;= '0';
            write_en &lt;= '0';
            cpu_wr_req_out &lt;= '0';
            cpu_rd_req_out &lt;= '0';
            cache_to_cache_req_out &lt;= '0';
            cache_to_cache_resp_out &lt;= '0';
            cache_to_cache_resp_out_ready &lt;= '0';
            
            evict_index &lt;= 0;
            cycle_counter &lt;= 0;
            
        elsif rising_edge(clk) then
            -- Default signal values
            read_en &lt;= '0';
            write_en &lt;= '0';
            cache_to_cache_req_out &lt;= '0';
            cache_to_cache_resp_out &lt;= '0';
            cache_to_cache_resp_out_ready &lt;= '0';
            
            -- Handle snooping requests from other caches
            if cache_to_cache_req_in = '1' then
                hit_index := find_cache_line(cache_to_cache_req_address_in, cache_mem);
                if hit_index &gt;= 0 then
                    if cache_mem(hit_index).msi_state = MSI_MODIFIED then
                        -- Provide data and transition to shared
                        cache_to_cache_resp_out &lt;= '1';
                        cache_to_cache_resp_out_data &lt;= cache_mem(hit_index).data;
                        cache_mem(hit_index).msi_state &lt;= MSI_SHARED;
                    elsif cache_mem(hit_index).msi_state = MSI_SHARED then
                        -- Provide data, stay shared
                        cache_to_cache_resp_out &lt;= '1';
                        cache_to_cache_resp_out_data &lt;= cache_mem(hit_index).data;
                    end if;
                else
                    cache_to_cache_resp_out &lt;= '0';
                end if;
                cache_to_cache_resp_out_ready &lt;= '1';
            end if;
            
            -- Handle invalidation requests
            if cpu_wr_req_in = '1' then
                hit_index := find_cache_line(cpu_req_addr_in, cache_mem);
                if hit_index &gt;= 0 then
                    cache_mem(hit_index).msi_state &lt;= MSI_INVALID;
                    cache_mem(hit_index).valid &lt;= '0';
                end if;
            end if;
            
            -- Main CPU state machine
            case cpu_state is
                when CPU_IDLE =&gt;
                    cycle_counter &lt;= cycle_counter + 1;
                    
                    -- Simple test pattern
                    if cycle_counter = 5 then
                        cpu_state &lt;= CPU_WRITE;
                        current_address &lt;= wantedAddress;
                        current_data &lt;= x"DEADBEEF";
                        operation_type &lt;= '1'; -- write
                        cpu_wr_req_out &lt;= '1';
                        cpu_req_addr_out &lt;= wantedAddress;
                        cache_state &lt;= CACHE_CHECK;
                        cycle_counter &lt;= 0;
                    elsif cycle_counter = 10 then
                        cpu_state &lt;= CPU_READ;
                        current_address &lt;= wantedAddress;
                        operation_type &lt;= '0'; -- read
                        cpu_rd_req_out &lt;= '1';
                        cpu_req_addr_out &lt;= wantedAddress;
                        cache_state &lt;= CACHE_CHECK;
                        cycle_counter &lt;= 0;
                    end if;
                
                when CPU_READ | CPU_WRITE =&gt;
                    case cache_state is
                        when CACHE_CHECK =&gt;
                            hit_index := find_cache_line(current_address, cache_mem);
                            if hit_index &gt;= 0 and cache_mem(hit_index).msi_state /= MSI_INVALID then
                                -- Cache hit
                                cache_hit_flag &lt;= '1';
                                cache_hit_index &lt;= hit_index;
                                cache_state &lt;= CACHE_HIT;
                            else
                                -- Cache miss
                                cache_hit_flag &lt;= '0';
                                cache_state &lt;= CACHE_MISS;
                            end if;
                        
                        when CACHE_HIT =&gt;
                            if operation_type = '0' then
                                -- Read hit - return data
                                cpu_state &lt;= CPU_IDLE;
                                cpu_rd_req_out &lt;= '0';
                                cache_state &lt;= CACHE_CHECK;
                            else
                                -- Write hit - update data and set modified
                                cache_mem(cache_hit_index).data &lt;= current_data;
                                cache_mem(cache_hit_index).msi_state &lt;= MSI_MODIFIED;
                                cpu_state &lt;= CPU_IDLE;
                                cpu_wr_req_out &lt;= '0';
                                cache_state &lt;= CACHE_CHECK;
                            end if;
                        
                        when CACHE_MISS =&gt;
                            -- Try cache-to-cache transfer first
                            cache_to_cache_req_out &lt;= '1';
                            cache_to_cache_req_address_out &lt;= current_address;
                            cache_state &lt;= CACHE_COHERENCE;
                        
                        when CACHE_COHERENCE =&gt;
                            if cache_to_cache_resp_in_ready = '1' then
                                if cache_to_cache_resp_in = '1' then
                                    -- Cache-to-cache hit
                                    empty_index := find_empty_line(cache_mem);
                                    if empty_index &gt;= 0 then
                                        -- Use empty line
                                        cache_mem(empty_index).valid &lt;= '1';
                                        cache_mem(empty_index).address &lt;= current_address;
                                        cache_mem(empty_index).data &lt;= cache_to_cache_resp_in_data;
                                        if operation_type = '0' then
                                            cache_mem(empty_index).msi_state &lt;= MSI_SHARED;
                                        else
                                            cache_mem(empty_index).msi_state &lt;= MSI_MODIFIED;
                                            cache_mem(empty_index).data &lt;= current_data;
                                        end if;
                                    else
                                        -- Evict using round-robin
                                        if cache_mem(evict_index).msi_state = MSI_MODIFIED then
                                            -- Write back to SDRAM
                                            write_en &lt;= '1';
                                            Sdram_addr &lt;= cache_mem(evict_index).address;
                                            Sdram_data_out &lt;= cache_mem(evict_index).data;
                                        end if;
                                        cache_mem(evict_index).valid &lt;= '1';
                                        cache_mem(evict_index).address &lt;= current_address;
                                        cache_mem(evict_index).data &lt;= cache_to_cache_resp_in_data;
                                        if operation_type = '0' then
                                            cache_mem(evict_index).msi_state &lt;= MSI_SHARED;
                                        else
                                            cache_mem(evict_index).msi_state &lt;= MSI_MODIFIED;
                                            cache_mem(evict_index).data &lt;= current_data;
                                        end if;
                                        evict_index &lt;= (evict_index + 1) mod CACHE_SIZE;
                                    end if;
                                    cpu_state &lt;= CPU_IDLE;
                                    if operation_type = '0' then
                                        cpu_rd_req_out &lt;= '0';
                                    else
                                        cpu_wr_req_out &lt;= '0';
                                    end if;
                                    cache_state &lt;= CACHE_CHECK;
                                else
                                    -- Cache-to-cache miss, go to SDRAM
                                    cache_state &lt;= CACHE_SDRAM_ACCESS;
                                end if;
                            end if;
                        
                        when CACHE_SDRAM_ACCESS =&gt;
                            if operation_type = '0' then
                                read_en &lt;= '1';
                            else
                                write_en &lt;= '1';
                                Sdram_data_out &lt;= current_data;
                            end if;
                            Sdram_addr &lt;= current_address;
                            
                            -- Allocate cache line
                            empty_index := find_empty_line(cache_mem);
                            if empty_index &gt;= 0 then
                                cache_mem(empty_index).valid &lt;= '1';
                                cache_mem(empty_index).address &lt;= current_address;
                                if operation_type = '0' then
                                    cache_mem(empty_index).data &lt;= Sdram_data_in;
                                    cache_mem(empty_index).msi_state &lt;= MSI_SHARED;
                                else
                                    cache_mem(empty_index).data &lt;= current_data;
                                    cache_mem(empty_index).msi_state &lt;= MSI_MODIFIED;
                                end if;
                            else
                                -- Evict using round-robin
                                if cache_mem(evict_index).msi_state = MSI_MODIFIED then
                                    write_en &lt;= '1';
                                    Sdram_addr &lt;= cache_mem(evict_index).address;
                                    Sdram_data_out &lt;= cache_mem(evict_index).data;
                                end if;
                                cache_mem(evict_index).valid &lt;= '1';
                                cache_mem(evict_index).address &lt;= current_address;
                                if operation_type = '0' then
                                    cache_mem(evict_index).data &lt;= Sdram_data_in;
                                    cache_mem(evict_index).msi_state &lt;= MSI_SHARED;
                                else
                                    cache_mem(evict_index).data &lt;= current_data;
                                    cache_mem(evict_index).msi_state &lt;= MSI_MODIFIED;
                                end if;
                                evict_index &lt;= (evict_index + 1) mod CACHE_SIZE;
                            end if;
                            
                            cpu_state &lt;= CPU_IDLE;
                            if operation_type = '0' then
                                cpu_rd_req_out &lt;= '0';
                            else
                                cpu_wr_req_out &lt;= '0';
                            end if;
                            cache_state &lt;= CACHE_CHECK;
                    end case;
                
                when others =&gt;
                    cpu_state &lt;= CPU_IDLE;
            end case;
        end if;
    end process;

end Behavioral;
</vhdl>
  <vhdl name="sdram">
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity sdram is
    port(
        clk        : in  std_logic;
        reset      : in  std_logic;
        operation1 : in  std_logic;                     -- 0=read, 1=write on port1
        operation2 : in  std_logic;                     -- 0=read, 1=write on port2
        ready1     : in  std_logic;                     -- handshake from CPU1
        ready2     : in  std_logic;                     -- handshake from CPU2
        addr1      : in  std_logic_vector(2 downto 0);
        addr2      : in  std_logic_vector(2 downto 0);
        data_in1   : in  std_logic_vector(31 downto 0); -- CPU→SDRAM data
        data_in2   : in  std_logic_vector(31 downto 0);
        data_out1  : out std_logic_vector(31 downto 0); -- SDRAM→CPU data
        data_out2  : out std_logic_vector(31 downto 0)
    );
end sdram;

architecture Behavioral of sdram is
    type memory_array is array (0 to 7) of std_logic_vector(31 downto 0);
    signal memory : memory_array;
begin
    process(clk, reset)
    begin
        if reset = '1' then
            -- Initialize memory with test pattern
            memory(0) &lt;= x"00000000";
            memory(1) &lt;= x"11111111";
            memory(2) &lt;= x"22222222";
            memory(3) &lt;= x"33333333";
            memory(4) &lt;= x"44444444";
            memory(5) &lt;= x"55555555";
            memory(6) &lt;= x"66666666";
            memory(7) &lt;= x"77777777";
        elsif rising_edge(clk) then
            -- Port 1 operations
            if ready1 = '1' then
                if operation1 = '1' then
                    -- Write
                    memory(to_integer(unsigned(addr1))) &lt;= data_in1;
                else
                    -- Read
                    data_out1 &lt;= memory(to_integer(unsigned(addr1)));
                end if;
            end if;
            
            -- Port 2 operations
            if ready2 = '1' then
                if operation2 = '1' then
                    -- Write
                    memory(to_integer(unsigned(addr2))) &lt;= data_in2;
                else
                    -- Read
                    data_out2 &lt;= memory(to_integer(unsigned(addr2)));
                end if;
            end if;
        end if;
    end process;
end Behavioral;
</vhdl>
</project>
